{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "FactoryDeprecated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endDate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimalProvide",
          "type": "uint256"
        }
      ],
      "name": "IBCODeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "MinimumFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minimalProvide",
          "type": "uint256"
        }
      ],
      "name": "deployIBCO",
      "outputs": [
        {
          "internalType": "contract IBCOTemplate",
          "name": "ICO",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "deprecateFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isProduct",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfProducts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "products",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumFee",
          "type": "uint256"
        }
      ],
      "name": "setMinimumFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transferAnyERC20Token",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/jibranraja/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/GSN/Context.sol",
    "1": "/Users/jibranraja/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/access/Ownable.sol",
    "2": "/Users/jibranraja/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/math/SafeMath.sol",
    "3": "/Users/jibranraja/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/IERC20.sol",
    "4": "/Users/jibranraja/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/SafeERC20.sol",
    "5": "/Users/jibranraja/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/utils/Address.sol",
    "6": "contracts/DynPoolFactory.sol"
  },
  "ast": {
    "absolutePath": "contracts/DynPoolFactory.sol",
    "exportedSymbols": {
      "DynPoolFactory": [
        624
      ],
      "IBCOTemplate": [
        362
      ]
    },
    "id": 625,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/Users/jibranraja/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 625,
        "sourceUnit": 1221,
        "src": "25:59:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jibranraja/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 625,
        "sourceUnit": 734,
        "src": "85:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jibranraja/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 625,
        "sourceUnit": 930,
        "src": "138:51:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jibranraja/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 625,
        "sourceUnit": 1008,
        "src": "190:56:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 733,
              "src": "273:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$733",
                "typeString": "contract Ownable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "273:7:6"
          }
        ],
        "contractDependencies": [
          733,
          1243
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 362,
        "linearizedBaseContracts": [
          362,
          733,
          1243
        ],
        "name": "IBCOTemplate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10,
            "libraryName": {
              "contractScope": null,
              "id": 8,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1220,
              "src": "293:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$1220",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "287:27:6",
            "typeName": {
              "contractScope": null,
              "id": 9,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1007,
              "src": "307:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1007",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 13,
            "libraryName": {
              "contractScope": null,
              "id": 11,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 929,
              "src": "325:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$929",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "319:27:6",
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "338:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 21,
            "name": "Claimed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21,
                  "src": "366:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userShare",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21,
                  "src": "391:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hegicAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21,
                  "src": "407:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "407:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "365:59:6"
            },
            "src": "352:73:6"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 27,
            "name": "Received",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27,
                  "src": "445:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27,
                  "src": "470:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "444:38:6"
            },
            "src": "430:53:6"
          },
          {
            "constant": false,
            "functionSelector": "ba9a061a",
            "id": 29,
            "mutability": "mutable",
            "name": "START",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "489:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "489:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "efe7a504",
            "id": 31,
            "mutability": "mutable",
            "name": "END",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "515:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "515:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aa1cf2a2",
            "id": 33,
            "mutability": "mutable",
            "name": "TOTAL_DISTRIBUTE_AMOUNT",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "539:38:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "539:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2a0722a6",
            "id": 35,
            "mutability": "mutable",
            "name": "MINIMAL_PROVIDE_AMOUNT",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "583:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "583:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "02e3cb0b",
            "id": 38,
            "mutability": "mutable",
            "name": "totalProvided",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "626:32:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "626:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "657:1:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "initialised",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "664:24:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 39,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "664:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "9ddb9ee1",
            "id": 44,
            "mutability": "mutable",
            "name": "provided",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "694:43:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 41,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "702:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "694:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 42,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "713:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50f3fc81",
            "id": 47,
            "mutability": "mutable",
            "name": "providers",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "743:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "743:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 46,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "743:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 49,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 362,
            "src": "775:19:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1007",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 48,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1007,
              "src": "775:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1007",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "1025:545:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1043:12:6",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 67,
                          "name": "initialised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "1044:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e747261637420616c726561647920696e697469616c69736564",
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1057:30:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f18fb7b71c8fc977a5657d5be9237a5e145013452058ae1f15f9f210cd91bb15",
                          "typeString": "literal_string \"contract already initialised\""
                        },
                        "value": "contract already initialised"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f18fb7b71c8fc977a5657d5be9237a5e145013452058ae1f15f9f210cd91bb15",
                          "typeString": "literal_string \"contract already initialised\""
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1035:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1035:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "1035:53:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 73,
                          "name": "_endDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "1106:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 74,
                          "name": "_startDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "1117:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1106:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "656e6420646174652063616e6e6f74206265206265666f72652073746172742064617465",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1129:38:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38a53dbea77f7a52c330ae0306808b5a717609d21742b71b8d125fb775e419e5",
                          "typeString": "literal_string \"end date cannot be before start date\""
                        },
                        "value": "end date cannot be before start date"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38a53dbea77f7a52c330ae0306808b5a717609d21742b71b8d125fb775e419e5",
                          "typeString": "literal_string \"end date cannot be before start date\""
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1098:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1098:70:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1098:70:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 80,
                          "name": "_minimalProvide",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1186:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1204:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1186:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746865206d696e696d756d20726169736520616d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1207:49:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4934686d978633ae89c97bd7b4377e5f69e27caa69251fba5d7b9fc542e3023a",
                          "typeString": "literal_string \"the minimum raise amount must be greater than 0\""
                        },
                        "value": "the minimum raise amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4934686d978633ae89c97bd7b4377e5f69e27caa69251fba5d7b9fc542e3023a",
                          "typeString": "literal_string \"the minimum raise amount must be greater than 0\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1178:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1178:79:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:79:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 86,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1268:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1007",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1276:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1007",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1268:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1007",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:14:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "TOTAL_DISTRIBUTE_AMOUNT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1292:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1318:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1292:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1292:38:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 94,
                      "name": "START",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1340:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "_startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1348:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1340:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:18:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "END",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1368:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "_endDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "1374:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1368:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1368:14:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "MINIMAL_PROVIDE_AMOUNT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1392:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 103,
                      "name": "_minimalProvide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "1417:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1392:40:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1392:40:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 106,
                      "name": "initialised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1442:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1456:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1442:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1442:18:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 111,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "1488:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 110,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "1470:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:28:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:28:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "_funder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1531:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 120,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1548:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                              "typeString": "contract IBCOTemplate"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                              "typeString": "contract IBCOTemplate"
                            }
                          ],
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1540:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 118,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1540:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1540:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1555:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 114,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1508:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1007",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1066,
                      "src": "1508:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1007_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1007_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1508:60:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1508:60:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1487b9d2",
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initIBCO",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "_funder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 126,
                  "src": "828:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 126,
                  "src": "853:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1007",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 52,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1007,
                    "src": "853:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1007",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 126,
                  "src": "876:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "_startDate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 126,
                  "src": "906:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_endDate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 126,
                  "src": "934:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "934:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "_minimalProvide",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 126,
                  "src": "960:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "960:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 126,
                  "src": "993:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "818:193:6"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1025:0:6"
            },
            "scope": 362,
            "src": "801:769:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "1604:322:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 130,
                          "name": "START",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1622:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 131,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1631:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1631:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1622:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206f66666572696e6720686173206e6f74207374617274656420796574",
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1648:34:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_650cf8fba9a54c4525457a126aa54d9e1f7f6dbb1516a10e0d1312e2262c7e4d",
                          "typeString": "literal_string \"The offering has not started yet\""
                        },
                        "value": "The offering has not started yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_650cf8fba9a54c4525457a126aa54d9e1f7f6dbb1516a10e0d1312e2262c7e4d",
                          "typeString": "literal_string \"The offering has not started yet\""
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1614:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1614:69:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1614:69:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 138,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1701:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1701:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "END",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1720:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1701:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206f66666572696e672068617320616c726561647920656e646564",
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1725:32:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f274ed1dc82f4cffd314d03711069c2c18dbcb25dcf79c843c9270163cc69f0f",
                          "typeString": "literal_string \"The offering has already ended\""
                        },
                        "value": "The offering has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f274ed1dc82f4cffd314d03711069c2c18dbcb25dcf79c843c9270163cc69f0f",
                          "typeString": "literal_string \"The offering has already ended\""
                        }
                      ],
                      "id": 137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1693:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1693:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1693:65:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "totalProvided",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1768:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 146,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1785:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1785:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1768:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:26:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 150,
                        "name": "provided",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1804:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 153,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 151,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1813:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1813:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1804:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1828:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1828:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1804:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1804:33:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 161,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1862:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1862:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 158,
                        "name": "providers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1847:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1847:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:26:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 166,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1897:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1897:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 168,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1909:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1909:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 165,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1888:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1888:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "EmitStatement",
                  "src": "1883:36:6"
                }
              ]
            },
            "documentation": null,
            "id": 173,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1584:2:6"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:0:6"
            },
            "scope": 362,
            "src": "1577:349:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 181,
              "nodeType": "Block",
              "src": "1990:40:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 178,
                      "name": "providers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "2007:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2007:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 177,
                  "id": 180,
                  "nodeType": "Return",
                  "src": "2000:23:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6b8550ec",
            "id": 182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberOfProviders",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1958:2:6"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 182,
                  "src": "1982:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1981:9:6"
            },
            "scope": 362,
            "src": "1932:98:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "2062:599:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 186,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2080:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2080:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 188,
                          "name": "END",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "2098:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2080:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2072:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2072:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "2072:30:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 193,
                            "name": "provided",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "2120:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 196,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 194,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2129:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2129:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2120:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2143:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2120:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2112:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:33:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:33:6"
                },
                {
                  "assignments": [
                    202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "userShare",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 261,
                      "src": "2156:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2156:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 207,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 203,
                      "name": "provided",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "2176:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 206,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 204,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2185:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2185:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2176:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2156:40:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 208,
                        "name": "provided",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2206:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 211,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 209,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2215:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2215:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2206:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2229:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2206:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "2206:24:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 215,
                      "name": "totalProvided",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2244:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 216,
                      "name": "MINIMAL_PROVIDE_AMOUNT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2261:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2244:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 259,
                    "nodeType": "Block",
                    "src": "2548:107:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 249,
                              "name": "userShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "2582:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 244,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2562:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2562:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2562:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2562:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 251,
                        "nodeType": "ExpressionStatement",
                        "src": "2562:30:6"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 253,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2619:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2619:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 255,
                              "name": "userShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "2631:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2642:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 252,
                            "name": "Claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "2611:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2611:33:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 258,
                        "nodeType": "EmitStatement",
                        "src": "2606:38:6"
                      }
                    ]
                  },
                  "id": 260,
                  "nodeType": "IfStatement",
                  "src": "2241:414:6",
                  "trueBody": {
                    "id": 243,
                    "nodeType": "Block",
                    "src": "2285:257:6",
                    "statements": [
                      {
                        "assignments": [
                          219
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 219,
                            "mutability": "mutable",
                            "name": "tokenAmount",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 243,
                            "src": "2299:19:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 218,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2299:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 227,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 225,
                              "name": "totalProvided",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "2398:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 222,
                                  "name": "userShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 202,
                                  "src": "2366:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 220,
                                  "name": "TOTAL_DISTRIBUTE_AMOUNT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33,
                                  "src": "2321:23:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 842,
                                "src": "2321:44:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2321:55:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 859,
                            "src": "2321:76:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2321:91:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2299:113:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 231,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2445:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2445:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 233,
                              "name": "tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "2457:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 228,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "2426:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1007",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1041,
                            "src": "2426:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1007_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1007_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2426:43:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 235,
                        "nodeType": "ExpressionStatement",
                        "src": "2426:43:6"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 237,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2496:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2496:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 239,
                              "name": "userShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "2508:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 240,
                              "name": "tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "2519:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 236,
                            "name": "Claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "2488:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2488:43:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 242,
                        "nodeType": "EmitStatement",
                        "src": "2483:48:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4e71d92d",
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2050:2:6"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2062:0:6"
            },
            "scope": 362,
            "src": "2036:625:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "2717:277:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 268,
                          "name": "END",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "2735:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 269,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2741:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2741:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2735:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206f66666572696e67206d75737420626520636f6d706c65746564",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2758:32:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cd44e5345455f2ab3cf5774240ca5b015eadceedc8c1552ab44a774cf8594fc",
                          "typeString": "literal_string \"The offering must be completed\""
                        },
                        "value": "The offering must be completed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cd44e5345455f2ab3cf5774240ca5b015eadceedc8c1552ab44a774cf8594fc",
                          "typeString": "literal_string \"The offering must be completed\""
                        }
                      ],
                      "id": 267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2727:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2727:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "2727:64:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 276,
                          "name": "totalProvided",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "2822:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 277,
                          "name": "MINIMAL_PROVIDE_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "2839:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2822:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520726571756972656420616d6f756e7420686173206e6f74206265656e2070726f766964656421",
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2875:44:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47bc2887f748e752cda61123a9a55a191837d1e01003f778831890a5eb91ec1f",
                          "typeString": "literal_string \"The required amount has not been provided!\""
                        },
                        "value": "The required amount has not been provided!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47bc2887f748e752cda61123a9a55a191837d1e01003f778831890a5eb91ec1f",
                          "typeString": "literal_string \"The required amount has not been provided!\""
                        }
                      ],
                      "id": 275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2801:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:128:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:128:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 290,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2973:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                                "typeString": "contract IBCOTemplate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                                "typeString": "contract IBCOTemplate"
                              }
                            ],
                            "id": 289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2965:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 288,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2965:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2965:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2965:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 284,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "2947:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2947:7:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2939:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 282,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2939:8:6",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2939:16:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2939:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2939:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "2939:48:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e43608d8",
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 265,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 264,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 682,
                  "src": "2707:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2707:9:6"
              }
            ],
            "name": "withdrawProvidedETH",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2695:2:6"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2717:0:6"
            },
            "scope": 362,
            "src": "2667:327:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 330,
              "nodeType": "Block",
              "src": "3044:283:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 302,
                          "name": "END",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "3062:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 303,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3068:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3068:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3062:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206f66666572696e67206d75737420626520636f6d706c65746564",
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3085:32:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cd44e5345455f2ab3cf5774240ca5b015eadceedc8c1552ab44a774cf8594fc",
                          "typeString": "literal_string \"The offering must be completed\""
                        },
                        "value": "The offering must be completed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cd44e5345455f2ab3cf5774240ca5b015eadceedc8c1552ab44a774cf8594fc",
                          "typeString": "literal_string \"The offering must be completed\""
                        }
                      ],
                      "id": 301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3054:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3054:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "3054:64:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 310,
                          "name": "totalProvided",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "3149:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 311,
                          "name": "MINIMAL_PROVIDE_AMOUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "3165:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3149:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520726571756972656420616d6f756e7420686173206265656e2070726f766964656421",
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3201:40:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4296c5c27f6e114e3c90403f439b947b6d0f5254de9e5150b601d7865d357384",
                          "typeString": "literal_string \"The required amount has been provided!\""
                        },
                        "value": "The required amount has been provided!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4296c5c27f6e114e3c90403f439b947b6d0f5254de9e5150b601d7865d357384",
                          "typeString": "literal_string \"The required amount has been provided!\""
                        }
                      ],
                      "id": 309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3128:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3128:123:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "3128:123:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 319,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 669,
                          "src": "3280:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3280:7:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 325,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3313:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                                  "typeString": "contract IBCOTemplate"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                                  "typeString": "contract IBCOTemplate"
                                }
                              ],
                              "id": 324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3305:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 323,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3305:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3305:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 321,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "3289:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1007",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 946,
                          "src": "3289:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3289:30:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 316,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "3261:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1007",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1041,
                      "src": "3261:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1007_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1007_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3261:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "3261:59:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ca628c78",
            "id": 331,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 299,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 298,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 682,
                  "src": "3034:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3034:9:6"
              }
            ],
            "name": "withdrawToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3022:2:6"
            },
            "returnParameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3044:0:6"
            },
            "scope": 362,
            "src": "3000:327:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 360,
              "nodeType": "Block",
              "src": "3386:156:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 337,
                            "name": "END",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "3404:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3330",
                            "id": 338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3410:7:6",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2592000_by_1",
                              "typeString": "int_const 2592000"
                            },
                            "value": "30"
                          },
                          "src": "3404:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 340,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3420:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3420:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3404:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5769746864726177616c20756e617661696c61626c6520796574",
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3437:28:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e09241595c287ae0b4c1ed65e043e6c13c2aebcf4225c1389e0ec2ca845c1f2",
                          "typeString": "literal_string \"Withdrawal unavailable yet\""
                        },
                        "value": "Withdrawal unavailable yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e09241595c287ae0b4c1ed65e043e6c13c2aebcf4225c1389e0ec2ca845c1f2",
                          "typeString": "literal_string \"Withdrawal unavailable yet\""
                        }
                      ],
                      "id": 336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3396:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3396:70:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "3396:70:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 349,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 669,
                          "src": "3495:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3495:7:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 355,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3528:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                                  "typeString": "contract IBCOTemplate"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                                  "typeString": "contract IBCOTemplate"
                                }
                              ],
                              "id": 354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3520:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 353,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3520:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 351,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "3504:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1007",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 946,
                          "src": "3504:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3504:30:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 346,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "3476:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1007",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1041,
                      "src": "3476:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1007_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1007_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3476:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "3476:59:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2db094ac",
            "id": 361,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 334,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 333,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 682,
                  "src": "3376:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3376:9:6"
              }
            ],
            "name": "withdrawUnclaimedToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3364:2:6"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3386:0:6"
            },
            "scope": 362,
            "src": "3333:209:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 625,
        "src": "248:3296:6"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 363,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 733,
              "src": "3628:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$733",
                "typeString": "contract Ownable"
              }
            },
            "id": 364,
            "nodeType": "InheritanceSpecifier",
            "src": "3628:7:6"
          }
        ],
        "contractDependencies": [
          362,
          733,
          1243
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 624,
        "linearizedBaseContracts": [
          624,
          733,
          1243
        ],
        "name": "DynPoolFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 367,
            "libraryName": {
              "contractScope": null,
              "id": 365,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 929,
              "src": "3647:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$929",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "3641:27:6",
            "typeName": {
              "id": 366,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3660:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 370,
            "libraryName": {
              "contractScope": null,
              "id": 368,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1220,
              "src": "3679:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$1220",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "3673:27:6",
            "typeName": {
              "contractScope": null,
              "id": 369,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1007,
              "src": "3693:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1007",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "ccdb3f45",
            "id": 372,
            "mutability": "mutable",
            "name": "newAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 624,
            "src": "3706:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 371,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3706:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1a7626e7",
            "id": 375,
            "mutability": "mutable",
            "name": "minimumFee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 624,
            "src": "3737:32:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 373,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3737:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31653137",
              "id": 374,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3765:4:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "1e17"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7fd29192",
            "id": 379,
            "mutability": "mutable",
            "name": "isProduct",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 624,
            "src": "3775:41:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 378,
              "keyType": {
                "id": 376,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3783:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3775:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 377,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "3794:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7acc0b20",
            "id": 382,
            "mutability": "mutable",
            "name": "products",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 624,
            "src": "3822:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 380,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3822:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 381,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "3822:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 398,
            "name": "IBCODeployed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 384,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 398,
                  "src": "3873:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3873:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 386,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 398,
                  "src": "3896:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3896:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 388,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 398,
                  "src": "3918:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1007",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 387,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1007,
                    "src": "3918:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1007",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 390,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 398,
                  "src": "3940:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3940:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 392,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startDate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 398,
                  "src": "3961:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3961:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 394,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endDate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 398,
                  "src": "3980:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3980:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 396,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "minimalProvide",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 398,
                  "src": "3997:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3997:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3872:148:6"
            },
            "src": "3854:167:6"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 404,
            "name": "MinimumFeeUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 404,
                  "src": "4050:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4050:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 404,
                  "src": "4066:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4066:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4049:32:6"
            },
            "src": "4026:56:6"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 408,
            "name": "FactoryDeprecated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 408,
                  "src": "4111:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4111:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4110:21:6"
            },
            "src": "4087:45:6"
          },
          {
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "4201:98:6",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 416,
                        "name": "minimumFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 375,
                        "src": "4234:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 417,
                        "name": "_minimumFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "4246:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 415,
                      "name": "MinimumFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "4216:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4216:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "EmitStatement",
                  "src": "4211:47:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 420,
                      "name": "minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "4268:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 421,
                      "name": "_minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "4281:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4268:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "4268:24:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "182a7506",
            "id": 425,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 413,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 412,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 682,
                  "src": "4191:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4191:9:6"
              }
            ],
            "name": "setMinimumFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 410,
                  "mutability": "mutable",
                  "name": "_minimumFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 425,
                  "src": "4161:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4161:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4160:21:6"
            },
            "returnParameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4201:0:6"
            },
            "scope": 624,
            "src": "4138:161:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "4362:39:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 430,
                      "name": "products",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 382,
                      "src": "4379:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4379:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 429,
                  "id": 432,
                  "nodeType": "Return",
                  "src": "4372:22:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c66301b2",
            "id": 434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberOfProducts",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4330:2:6"
            },
            "returnParameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 428,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 434,
                  "src": "4354:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4354:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4353:9:6"
            },
            "scope": 624,
            "src": "4305:96:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "4473:169:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 442,
                          "name": "newAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 372,
                          "src": "4491:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4513:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4505:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 443,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4505:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4505:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4491:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e657720666163746f7279206164647265737320697320616c7265616479206f776e6564",
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4517:38:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67acdccc85536ef98ce2744dbbcc227a0259e0f17f5f7f70e0f054a86c5d6f60",
                          "typeString": "literal_string \"new factory address is already owned\""
                        },
                        "value": "new factory address is already owned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67acdccc85536ef98ce2744dbbcc227a0259e0f17f5f7f70e0f054a86c5d6f60",
                          "typeString": "literal_string \"new factory address is already owned\""
                        }
                      ],
                      "id": 441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4483:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4483:73:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "4483:73:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 452,
                        "name": "_newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 436,
                        "src": "4589:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 451,
                      "name": "FactoryDeprecated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "4571:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4571:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "EmitStatement",
                  "src": "4566:35:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 455,
                      "name": "newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "4611:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 456,
                      "name": "_newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 436,
                      "src": "4624:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4611:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "4611:24:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "de0946af",
            "id": 460,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 439,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 438,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 682,
                  "src": "4463:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4463:9:6"
              }
            ],
            "name": "deprecateFactory",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 460,
                  "src": "4433:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4433:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4432:21:6"
            },
            "returnParameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4473:0:6"
            },
            "scope": 624,
            "src": "4407:235:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "4757:70:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 475,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 669,
                          "src": "4804:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4804:7:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 477,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 464,
                        "src": "4813:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 472,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 462,
                            "src": "4781:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 471,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1007,
                          "src": "4774:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1007_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4774:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1007",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 956,
                      "src": "4774:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4774:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 470,
                  "id": 479,
                  "nodeType": "Return",
                  "src": "4767:53:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dc39d06d",
            "id": 481,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 467,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 466,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 682,
                  "src": "4724:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4724:9:6"
              }
            ],
            "name": "transferAnyERC20Token",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 462,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 481,
                  "src": "4679:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4679:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 464,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 481,
                  "src": "4701:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4701:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4678:38:6"
            },
            "returnParameters": {
              "id": 470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 469,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 481,
                  "src": "4743:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4743:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4742:14:6"
            },
            "scope": 624,
            "src": "4648:179:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 615,
              "nodeType": "Block",
              "src": "5040:877:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 497,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5058:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5058:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 499,
                          "name": "minimumFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 375,
                          "src": "5071:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5058:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46656520746f206c61756e636820636f6e747261637420697320696e73756666696369656e74",
                        "id": 501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5083:40:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29caea9a53fc3f0cf2da55f22ac19474c620f1018bf35125658ed7008c225bd0",
                          "typeString": "literal_string \"Fee to launch contract is insufficient\""
                        },
                        "value": "Fee to launch contract is insufficient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29caea9a53fc3f0cf2da55f22ac19474c620f1018bf35125658ed7008c225bd0",
                          "typeString": "literal_string \"Fee to launch contract is insufficient\""
                        }
                      ],
                      "id": 496,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5050:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5050:74:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 503,
                  "nodeType": "ExpressionStatement",
                  "src": "5050:74:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 505,
                          "name": "_tokenSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 485,
                          "src": "5142:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5157:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5142:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f20746f6b656e73207375626d6974746564",
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5160:21:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6625128113d7fa10c70a6e7294b3a3a3e70db0062721538d6defe35366c9022c",
                          "typeString": "literal_string \"No tokens submitted\""
                        },
                        "value": "No tokens submitted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6625128113d7fa10c70a6e7294b3a3a3e70db0062721538d6defe35366c9022c",
                          "typeString": "literal_string \"No tokens submitted\""
                        }
                      ],
                      "id": 504,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5134:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5134:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "5134:48:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 512,
                          "name": "_endDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 489,
                          "src": "5200:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 513,
                          "name": "_startDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 487,
                          "src": "5211:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5200:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "456e6420646174652063616e6e6f74206265206265666f7265207468652073746172742064617465",
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5223:42:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75015b8c75e28eedea17907b3ab2e7bb8cc3b2a55ae77a4244ffc7f3c3e76b0b",
                          "typeString": "literal_string \"End date cannot be before the start date\""
                        },
                        "value": "End date cannot be before the start date"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75015b8c75e28eedea17907b3ab2e7bb8cc3b2a55ae77a4244ffc7f3c3e76b0b",
                          "typeString": "literal_string \"End date cannot be before the start date\""
                        }
                      ],
                      "id": 511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5192:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5192:74:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "5192:74:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 518,
                      "name": "ICO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "5276:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                        "typeString": "contract IBCOTemplate"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5282:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_IBCOTemplate_$362_$",
                          "typeString": "function () returns (contract IBCOTemplate)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 519,
                          "name": "IBCOTemplate",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 362,
                          "src": "5286:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                            "typeString": "contract IBCOTemplate"
                          }
                        }
                      },
                      "id": 521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5282:18:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                        "typeString": "contract IBCOTemplate"
                      }
                    },
                    "src": "5276:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                      "typeString": "contract IBCOTemplate"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "5276:24:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 527,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5338:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5338:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 531,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5358:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DynPoolFactory_$624",
                                  "typeString": "contract DynPoolFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DynPoolFactory_$624",
                                  "typeString": "contract DynPoolFactory"
                                }
                              ],
                              "id": 530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5350:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 529,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5350:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5350:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 533,
                            "name": "_tokenSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "5365:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 525,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 483,
                            "src": "5318:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1007",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 988,
                          "src": "5318:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5318:60:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f6b656e207472616e7366657220746f20666163746f7279206661696c6564",
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5380:34:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18de7668f9b08fac76fecf5ef86a2352a51e02be908dc07096b3194753c0ed32",
                          "typeString": "literal_string \"token transfer to factory failed\""
                        },
                        "value": "token transfer to factory failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18de7668f9b08fac76fecf5ef86a2352a51e02be908dc07096b3194753c0ed32",
                          "typeString": "literal_string \"token transfer to factory failed\""
                        }
                      ],
                      "id": 524,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5310:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5310:105:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "5310:105:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 543,
                                "name": "ICO",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 494,
                                "src": "5456:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                                  "typeString": "contract IBCOTemplate"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                                  "typeString": "contract IBCOTemplate"
                                }
                              ],
                              "id": 542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5448:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 541,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5448:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5448:12:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 545,
                            "name": "_tokenSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "5462:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 539,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 483,
                            "src": "5433:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1007",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 976,
                          "src": "5433:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5433:42:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f6b656e20617070726f76616c20756e7375636365737366756c",
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5477:29:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_529ee5e493d9413d7353028c6b8ef325c91d3528500d2943cdb617989fc9d00c",
                          "typeString": "literal_string \"token approval unsuccessful\""
                        },
                        "value": "token approval unsuccessful"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_529ee5e493d9413d7353028c6b8ef325c91d3528500d2943cdb617989fc9d00c",
                          "typeString": "literal_string \"token approval unsuccessful\""
                        }
                      ],
                      "id": 538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5425:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5425:82:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "5425:82:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 556,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5552:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DynPoolFactory_$624",
                              "typeString": "contract DynPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DynPoolFactory_$624",
                              "typeString": "contract DynPoolFactory"
                            }
                          ],
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5544:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 554,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5544:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5544:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 558,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "5559:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1007",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 559,
                        "name": "_tokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "5567:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 560,
                        "name": "_startDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 487,
                        "src": "5581:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 561,
                        "name": "_endDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 489,
                        "src": "5593:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 562,
                        "name": "_minimalProvide",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "5603:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 563,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5620:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5620:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1007",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 551,
                            "name": "ICO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 494,
                            "src": "5530:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                              "typeString": "contract IBCOTemplate"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                              "typeString": "contract IBCOTemplate"
                            }
                          ],
                          "id": 550,
                          "name": "IBCOTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 362,
                          "src": "5517:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBCOTemplate_$362_$",
                            "typeString": "type(contract IBCOTemplate)"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5517:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                          "typeString": "contract IBCOTemplate"
                        }
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initIBCO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126,
                      "src": "5517:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IERC20_$1007_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,contract IERC20,uint256,uint256,uint256,uint256,address) external"
                      }
                    },
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5517:114:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "5517:114:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "isProduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "5641:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 572,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 570,
                            "name": "ICO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 494,
                            "src": "5659:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                              "typeString": "contract IBCOTemplate"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                              "typeString": "contract IBCOTemplate"
                            }
                          ],
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5651:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 568,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5651:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5651:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5641:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5667:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5641:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "5641:30:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 581,
                            "name": "ICO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 494,
                            "src": "5703:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                              "typeString": "contract IBCOTemplate"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                              "typeString": "contract IBCOTemplate"
                            }
                          ],
                          "id": 580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5695:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 579,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5695:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5695:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 576,
                        "name": "products",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "5681:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5681:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5681:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "5681:27:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 586,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5736:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5736:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 590,
                            "name": "ICO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 494,
                            "src": "5756:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                              "typeString": "contract IBCOTemplate"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                              "typeString": "contract IBCOTemplate"
                            }
                          ],
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5748:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 588,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5748:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5748:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 592,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "5762:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1007",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 593,
                        "name": "_tokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "5770:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 594,
                        "name": "_startDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 487,
                        "src": "5784:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 595,
                        "name": "_endDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 489,
                        "src": "5796:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 596,
                        "name": "_minimalProvide",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "5806:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1007",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 585,
                      "name": "IBCODeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "5723:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_contract$_IERC20_$1007_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,contract IERC20,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5723:99:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 598,
                  "nodeType": "EmitStatement",
                  "src": "5718:104:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 599,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5836:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5836:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5848:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5836:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 614,
                  "nodeType": "IfStatement",
                  "src": "5832:79:6",
                  "trueBody": {
                    "id": 613,
                    "nodeType": "Block",
                    "src": "5850:61:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 609,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5890:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5890:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 605,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 669,
                                    "src": "5872:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 606,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5872:7:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5864:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 603,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5864:8:6",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5864:16:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5864:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5864:36:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 612,
                        "nodeType": "ExpressionStatement",
                        "src": "5864:36:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a1d555e8",
            "id": 616,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployIBCO",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 483,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 616,
                  "src": "4862:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1007",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 482,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1007,
                    "src": "4862:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1007",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 485,
                  "mutability": "mutable",
                  "name": "_tokenSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 616,
                  "src": "4885:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4885:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 487,
                  "mutability": "mutable",
                  "name": "_startDate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 616,
                  "src": "4915:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4915:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 489,
                  "mutability": "mutable",
                  "name": "_endDate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 616,
                  "src": "4943:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4943:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "_minimalProvide",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 616,
                  "src": "4969:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4969:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4852:141:6"
            },
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 494,
                  "mutability": "mutable",
                  "name": "ICO",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 616,
                  "src": "5018:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                    "typeString": "contract IBCOTemplate"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 493,
                    "name": "IBCOTemplate",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 362,
                    "src": "5018:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBCOTemplate_$362",
                      "typeString": "contract IBCOTemplate"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5017:18:6"
            },
            "scope": 624,
            "src": "4833:1084:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 622,
              "nodeType": "Block",
              "src": "5951:25:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 619,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "5961:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5961:8:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "5961:8:6"
                }
              ]
            },
            "documentation": null,
            "id": 623,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5931:2:6"
            },
            "returnParameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5951:0:6"
            },
            "scope": 624,
            "src": "5923:53:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 625,
        "src": "3601:2377:6"
      }
    ],
    "src": "0:5978:6"
  },
  "bytecode": "608060405267016345785d8a000060025534801561001c57600080fd5b506000610027610076565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061007a565b3390565b611f8f806100896000396000f3fe6080604052600436106100ab5760003560e01c8063a1d555e811610064578063a1d555e8146101c4578063c66301b214610202578063ccdb3f4514610217578063dc39d06d1461022c578063de0946af14610265578063f2fde38b14610298576100b5565b8063182a7506146100ba5780631a7626e7146100e6578063715018a61461010d5780637acc0b20146101225780637fd29192146101685780638da5cb5b146101af576100b5565b366100b557600080fd5b600080fd5b3480156100c657600080fd5b506100e4600480360360208110156100dd57600080fd5b50356102cb565b005b3480156100f257600080fd5b506100fb610365565b60408051918252519081900360200190f35b34801561011957600080fd5b506100e461036b565b34801561012e57600080fd5b5061014c6004803603602081101561014557600080fd5b503561040d565b604080516001600160a01b039092168252519081900360200190f35b34801561017457600080fd5b5061019b6004803603602081101561018b57600080fd5b50356001600160a01b0316610434565b604080519115158252519081900360200190f35b3480156101bb57600080fd5b5061014c610449565b61014c600480360360a08110156101da57600080fd5b506001600160a01b038135169060208101359060408101359060608101359060800135610458565b34801561020e57600080fd5b506100fb61088a565b34801561022357600080fd5b5061014c610890565b34801561023857600080fd5b5061019b6004803603604081101561024f57600080fd5b506001600160a01b03813516906020013561089f565b34801561027157600080fd5b506100e46004803603602081101561028857600080fd5b50356001600160a01b031661098a565b3480156102a457600080fd5b506100e4600480360360208110156102bb57600080fd5b50356001600160a01b0316610a88565b6102d3610b80565b6000546001600160a01b03908116911614610323576040805162461bcd60e51b81526020600482018190526024820152600080516020611f3a833981519152604482015290519081900360640190fd5b600254604080519182526020820183905280517fcc2f49c6214278ae5862935eff953448e8e69118d10abfafaf63ea6aa35255cb9281900390910190a1600255565b60025481565b610373610b80565b6000546001600160a01b039081169116146103c3576040805162461bcd60e51b81526020600482018190526024820152600080516020611f3a833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6004818154811061041a57fe5b6000918252602090912001546001600160a01b0316905081565b60036020526000908152604090205460ff1681565b6000546001600160a01b031690565b600060025434101561049b5760405162461bcd60e51b8152600401808060200182810382526026815260200180611ec86026913960400191505060405180910390fd5b600085116104e6576040805162461bcd60e51b8152602060048201526013602482015272139bc81d1bdad95b9cc81cdd589b5a5d1d1959606a1b604482015290519081900360640190fd5b8383116105245760405162461bcd60e51b8152600401808060200182810382526028815260200180611f126028913960400191505060405180910390fd5b60405161053090610b84565b604051809103906000f08015801561054c573d6000803e3d6000fd5b50604080516323b872dd60e01b81523360048201523060248201526044810188905290519192506001600160a01b038816916323b872dd916064808201926020929091908290030181600087803b1580156105a657600080fd5b505af11580156105ba573d6000803e3d6000fd5b505050506040513d60208110156105d057600080fd5b5051610623576040805162461bcd60e51b815260206004820181905260248201527f746f6b656e207472616e7366657220746f20666163746f7279206661696c6564604482015290519081900360640190fd5b856001600160a01b031663095ea7b382876040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561067a57600080fd5b505af115801561068e573d6000803e3d6000fd5b505050506040513d60208110156106a457600080fd5b50516106f7576040805162461bcd60e51b815260206004820152601b60248201527f746f6b656e20617070726f76616c20756e7375636365737366756c0000000000604482015290519081900360640190fd5b60408051630a43dce960e11b81523060048201526001600160a01b03888116602483015260448201889052606482018790526084820186905260a482018590523360c4830152915191831691631487b9d29160e48082019260009290919082900301818387803b15801561076a57600080fd5b505af115801561077e573d6000803e3d6000fd5b5050506001600160a01b038083166000818152600360209081526040808320805460ff191660019081179091556004805491820181559093527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90920180546001600160a01b0319168417905581518a8152908101899052808201889052606081018790529051928a169350909133917f3aea98549091f8031ef0f0dc5b5fd5488909d726f5994b8d0ca261b32d926ca7919081900360800190a4341561088157610847610449565b6001600160a01b03166108fc349081150290604051600060405180830381858888f1935050505015801561087f573d6000803e3d6000fd5b505b95945050505050565b60045490565b6001546001600160a01b031681565b60006108a9610b80565b6000546001600160a01b039081169116146108f9576040805162461bcd60e51b81526020600482018190526024820152600080516020611f3a833981519152604482015290519081900360640190fd5b826001600160a01b031663a9059cbb610910610449565b846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561095757600080fd5b505af115801561096b573d6000803e3d6000fd5b505050506040513d602081101561098157600080fd5b50519392505050565b610992610b80565b6000546001600160a01b039081169116146109e2576040805162461bcd60e51b81526020600482018190526024820152600080516020611f3a833981519152604482015290519081900360640190fd5b6001546001600160a01b031615610a2a5760405162461bcd60e51b8152600401808060200182810382526024815260200180611eee6024913960400191505060405180910390fd5b604080516001600160a01b038316815290517f0ac885cfcac9d1450e80f787dbf9546001fb50414106435b10b1d27b448b86689181900360200190a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b610a90610b80565b6000546001600160a01b03908116911614610ae0576040805162461bcd60e51b81526020600482018190526024820152600080516020611f3a833981519152604482015290519081900360640190fd5b6001600160a01b038116610b255760405162461bcd60e51b8152600401808060200182810382526026815260200180611ea26026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b61131080610b928339019056fe6080604052600060055534801561001557600080fd5b50600061002061006f565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610073565b3390565b61128e806100826000396000f3fe6080604052600436106101025760003560e01c80638da5cb5b11610095578063ca628c7811610064578063ca628c78146103fa578063e43608d81461040f578063efe7a50414610424578063f2fde38b14610439578063fc0c546a1461046c5761024e565b80638da5cb5b146103885780639ddb9ee11461039d578063aa1cf2a2146103d0578063ba9a061a146103e55761024e565b80634e71d92d116100d15780634e71d92d1461030357806350f3fc81146103185780636b8550ec1461035e578063715018a6146103735761024e565b806302e3cb0b146102535780631487b9d21461027a5780632a0722a6146102d95780632db094ac146102ee5761024e565b3661024e5742600154111561015e576040805162461bcd60e51b815260206004820181905260248201527f546865206f66666572696e6720686173206e6f74207374617274656420796574604482015290519081900360640190fd5b6002544211156101b5576040805162461bcd60e51b815260206004820152601e60248201527f546865206f66666572696e672068617320616c726561647920656e6465640000604482015290519081900360640190fd5b60058054349081019091553360008181526007602090815260408083208054860190556008805460018101825593527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee390920180546001600160a01b031916841790558151938452905191927f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874929081900390910190a2005b600080fd5b34801561025f57600080fd5b50610268610481565b60408051918252519081900360200190f35b34801561028657600080fd5b506102d7600480360360e081101561029d57600080fd5b506001600160a01b038135811691602081013582169160408201359160608101359160808201359160a08101359160c09091013516610487565b005b3480156102e557600080fd5b506102686105c2565b3480156102fa57600080fd5b506102d76105c8565b34801561030f57600080fd5b506102d7610712565b34801561032457600080fd5b506103426004803603602081101561033b57600080fd5b5035610841565b604080516001600160a01b039092168252519081900360200190f35b34801561036a57600080fd5b50610268610868565b34801561037f57600080fd5b506102d761086e565b34801561039457600080fd5b50610342610910565b3480156103a957600080fd5b50610268600480360360208110156103c057600080fd5b50356001600160a01b031661091f565b3480156103dc57600080fd5b50610268610931565b3480156103f157600080fd5b50610268610937565b34801561040657600080fd5b506102d761093d565b34801561041b57600080fd5b506102d7610a2d565b34801561043057600080fd5b50610268610b5e565b34801561044557600080fd5b506102d76004803603602081101561045c57600080fd5b50356001600160a01b0316610b64565b34801561047857600080fd5b50610342610c5c565b60055481565b60065460ff16156104df576040805162461bcd60e51b815260206004820152601c60248201527f636f6e747261637420616c726561647920696e697469616c6973656400000000604482015290519081900360640190fd5b83831161051d5760405162461bcd60e51b81526004018080602001828103825260248152602001806111256024913960400191505060405180910390fd5b6000821161055c5760405162461bcd60e51b815260040180806020018281038252602f815260200180611199602f913960400191505060405180910390fd5b600980546001600160a01b0319166001600160a01b03881617905560038590556001848155600284905560048390556006805460ff191690911790556105a181610b64565b6009546105b9906001600160a01b0316883088610c6b565b50505050505050565b60045481565b6105d0610ccb565b6000546001600160a01b03908116911614610620576040805162461bcd60e51b8152602060048201819052602482015260008051602061120f833981519152604482015290519081900360640190fd5b4260025462278d00011061067b576040805162461bcd60e51b815260206004820152601a60248201527f5769746864726177616c20756e617661696c61626c6520796574000000000000604482015290519081900360640190fd5b610710610686610910565b600954604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156106d157600080fd5b505afa1580156106e5573d6000803e3d6000fd5b505050506040513d60208110156106fb57600080fd5b50516009546001600160a01b03169190610ccf565b565b600254421161072057600080fd5b3360009081526007602052604090205461073957600080fd5b3360009081526007602052604081208054919055600454600554106107d557600061077b60055461077584600354610d2690919063ffffffff16565b90610d88565b600954909150610795906001600160a01b03163383610ccf565b6040805183815260208101839052815133927f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a928290030190a25061083e565b604051339082156108fc029083906000818181858888f19350505050158015610802573d6000803e3d6000fd5b506040805182815260006020820152815133927f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a928290030190a25b50565b6008818154811061084e57fe5b6000918252602090912001546001600160a01b0316905081565b60085490565b610876610ccb565b6000546001600160a01b039081169116146108c6576040805162461bcd60e51b8152602060048201819052602482015260008051602061120f833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60076020526000908152604090205481565b60035481565b60015481565b610945610ccb565b6000546001600160a01b03908116911614610995576040805162461bcd60e51b8152602060048201819052602482015260008051602061120f833981519152604482015290519081900360640190fd5b42600254106109eb576040805162461bcd60e51b815260206004820152601e60248201527f546865206f66666572696e67206d75737420626520636f6d706c657465640000604482015290519081900360640190fd5b6004546005541061067b5760405162461bcd60e51b81526004018080602001828103825260268152602001806111496026913960400191505060405180910390fd5b610a35610ccb565b6000546001600160a01b03908116911614610a85576040805162461bcd60e51b8152602060048201819052602482015260008051602061120f833981519152604482015290519081900360640190fd5b4260025410610adb576040805162461bcd60e51b815260206004820152601e60248201527f546865206f66666572696e67206d75737420626520636f6d706c657465640000604482015290519081900360640190fd5b6004546005541015610b1e5760405162461bcd60e51b815260040180806020018281038252602a81526020018061116f602a913960400191505060405180910390fd5b610b26610910565b6001600160a01b03166108fc479081150290604051600060405180830381858888f1935050505015801561083e573d6000803e3d6000fd5b60025481565b610b6c610ccb565b6000546001600160a01b03908116911614610bbc576040805162461bcd60e51b8152602060048201819052602482015260008051602061120f833981519152604482015290519081900360640190fd5b6001600160a01b038116610c015760405162461bcd60e51b81526004018080602001828103825260268152602001806110ff6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6009546001600160a01b031681565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610cc5908590610dca565b50505050565b3390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610d21908490610dca565b505050565b600082610d3557506000610d82565b82820282848281610d4257fe5b0414610d7f5760405162461bcd60e51b81526004018080602001828103825260218152602001806111ee6021913960400191505060405180910390fd5b90505b92915050565b6000610d7f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610e7b565b6060610e1f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f1f9092919063ffffffff16565b805190915015610d2157808060200190516020811015610e3e57600080fd5b5051610d215760405162461bcd60e51b815260040180806020018281038252602a81526020018061122f602a913960400191505060405180910390fd5b60008183610f075760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ecc578181015183820152602001610eb4565b50505050905090810190601f168015610ef95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610f1357fe5b049150505b9392505050565b6060610f2e8484600085610f36565b949350505050565b606082471015610f775760405162461bcd60e51b81526004018080602001828103825260268152602001806111c86026913960400191505060405180910390fd5b610f8085611092565b610fd1576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106110105780518252601f199092019160209182019101610ff1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611072576040519150601f19603f3d011682016040523d82523d6000602084013e611077565b606091505b5091509150611087828286611098565b979650505050505050565b3b151590565b606083156110a7575081610f18565b8251156110b75782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315610ecc578181015183820152602001610eb456fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373656e6420646174652063616e6e6f74206265206265666f7265207374617274206461746554686520726571756972656420616d6f756e7420686173206265656e2070726f76696465642154686520726571756972656420616d6f756e7420686173206e6f74206265656e2070726f766964656421746865206d696e696d756d20726169736520616d6f756e74206d7573742062652067726561746572207468616e2030416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220d1ec38d9f9cb0a5d740260d25ffaa917864c933112d702ebaf452fe7210aa19464736f6c634300060c00334f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737346656520746f206c61756e636820636f6e747261637420697320696e73756666696369656e746e657720666163746f7279206164647265737320697320616c7265616479206f776e6564456e6420646174652063616e6e6f74206265206265666f72652074686520737461727420646174654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212202c056706c5f2cc58b378b41a298f8c60573953f18ac364078379394f0f4bc45664736f6c634300060c0033",
  "bytecodeSha1": "d48a31df8936610d8b49aacb84d8bfb84c188e67",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "DynPoolFactory",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Ownable.transferOwnership": {
          "33": [
            1287,
            1309,
            true
          ],
          "34": [
            2088,
            2110,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "DynPoolFactory.deployIBCO": {
          "26": [
            5058,
            5081,
            true
          ],
          "27": [
            5142,
            5158,
            true
          ],
          "28": [
            5200,
            5221,
            true
          ],
          "29": [
            5318,
            5378,
            true
          ],
          "30": [
            5433,
            5475,
            true
          ],
          "31": [
            5836,
            5849,
            false
          ]
        },
        "DynPoolFactory.deprecateFactory": {
          "32": [
            4491,
            4515,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "25": [
            678,
            695
          ]
        }
      },
      "1": {
        "Ownable.owner": {
          "5": [
            1140,
            1153
          ]
        },
        "Ownable.renounceOwnership": {
          "3": [
            1770,
            1815
          ],
          "4": [
            1825,
            1844
          ]
        },
        "Ownable.transferOwnership": {
          "22": [
            2080,
            2153
          ],
          "23": [
            2163,
            2206
          ],
          "24": [
            2216,
            2233
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "DynPoolFactory.<receive>": {
          "0": [
            5961,
            5969
          ]
        },
        "DynPoolFactory.deployIBCO": {
          "6": [
            5050,
            5124
          ],
          "7": [
            5134,
            5182
          ],
          "8": [
            5192,
            5266
          ],
          "9": [
            5276,
            5300
          ],
          "10": [
            5310,
            5415
          ],
          "11": [
            5425,
            5507
          ],
          "12": [
            5517,
            5631
          ],
          "13": [
            5641,
            5671
          ],
          "14": [
            5681,
            5708
          ],
          "15": [
            5718,
            5822
          ],
          "16": [
            5864,
            5900
          ]
        },
        "DynPoolFactory.deprecateFactory": {
          "19": [
            4483,
            4556
          ],
          "20": [
            4566,
            4601
          ],
          "21": [
            4611,
            4635
          ]
        },
        "DynPoolFactory.numberOfProducts": {
          "17": [
            4372,
            4394
          ]
        },
        "DynPoolFactory.setMinimumFee": {
          "1": [
            4211,
            4258
          ],
          "2": [
            4268,
            4292
          ]
        },
        "DynPoolFactory.transferAnyERC20Token": {
          "18": [
            4767,
            4820
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.3.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/Context",
    "IBCOTemplate",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/SafeMath"
  ],
  "deployedBytecode": "6080604052600436106100ab5760003560e01c8063a1d555e811610064578063a1d555e8146101c4578063c66301b214610202578063ccdb3f4514610217578063dc39d06d1461022c578063de0946af14610265578063f2fde38b14610298576100b5565b8063182a7506146100ba5780631a7626e7146100e6578063715018a61461010d5780637acc0b20146101225780637fd29192146101685780638da5cb5b146101af576100b5565b366100b557600080fd5b600080fd5b3480156100c657600080fd5b506100e4600480360360208110156100dd57600080fd5b50356102cb565b005b3480156100f257600080fd5b506100fb610365565b60408051918252519081900360200190f35b34801561011957600080fd5b506100e461036b565b34801561012e57600080fd5b5061014c6004803603602081101561014557600080fd5b503561040d565b604080516001600160a01b039092168252519081900360200190f35b34801561017457600080fd5b5061019b6004803603602081101561018b57600080fd5b50356001600160a01b0316610434565b604080519115158252519081900360200190f35b3480156101bb57600080fd5b5061014c610449565b61014c600480360360a08110156101da57600080fd5b506001600160a01b038135169060208101359060408101359060608101359060800135610458565b34801561020e57600080fd5b506100fb61088a565b34801561022357600080fd5b5061014c610890565b34801561023857600080fd5b5061019b6004803603604081101561024f57600080fd5b506001600160a01b03813516906020013561089f565b34801561027157600080fd5b506100e46004803603602081101561028857600080fd5b50356001600160a01b031661098a565b3480156102a457600080fd5b506100e4600480360360208110156102bb57600080fd5b50356001600160a01b0316610a88565b6102d3610b80565b6000546001600160a01b03908116911614610323576040805162461bcd60e51b81526020600482018190526024820152600080516020611f3a833981519152604482015290519081900360640190fd5b600254604080519182526020820183905280517fcc2f49c6214278ae5862935eff953448e8e69118d10abfafaf63ea6aa35255cb9281900390910190a1600255565b60025481565b610373610b80565b6000546001600160a01b039081169116146103c3576040805162461bcd60e51b81526020600482018190526024820152600080516020611f3a833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6004818154811061041a57fe5b6000918252602090912001546001600160a01b0316905081565b60036020526000908152604090205460ff1681565b6000546001600160a01b031690565b600060025434101561049b5760405162461bcd60e51b8152600401808060200182810382526026815260200180611ec86026913960400191505060405180910390fd5b600085116104e6576040805162461bcd60e51b8152602060048201526013602482015272139bc81d1bdad95b9cc81cdd589b5a5d1d1959606a1b604482015290519081900360640190fd5b8383116105245760405162461bcd60e51b8152600401808060200182810382526028815260200180611f126028913960400191505060405180910390fd5b60405161053090610b84565b604051809103906000f08015801561054c573d6000803e3d6000fd5b50604080516323b872dd60e01b81523360048201523060248201526044810188905290519192506001600160a01b038816916323b872dd916064808201926020929091908290030181600087803b1580156105a657600080fd5b505af11580156105ba573d6000803e3d6000fd5b505050506040513d60208110156105d057600080fd5b5051610623576040805162461bcd60e51b815260206004820181905260248201527f746f6b656e207472616e7366657220746f20666163746f7279206661696c6564604482015290519081900360640190fd5b856001600160a01b031663095ea7b382876040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561067a57600080fd5b505af115801561068e573d6000803e3d6000fd5b505050506040513d60208110156106a457600080fd5b50516106f7576040805162461bcd60e51b815260206004820152601b60248201527f746f6b656e20617070726f76616c20756e7375636365737366756c0000000000604482015290519081900360640190fd5b60408051630a43dce960e11b81523060048201526001600160a01b03888116602483015260448201889052606482018790526084820186905260a482018590523360c4830152915191831691631487b9d29160e48082019260009290919082900301818387803b15801561076a57600080fd5b505af115801561077e573d6000803e3d6000fd5b5050506001600160a01b038083166000818152600360209081526040808320805460ff191660019081179091556004805491820181559093527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90920180546001600160a01b0319168417905581518a8152908101899052808201889052606081018790529051928a169350909133917f3aea98549091f8031ef0f0dc5b5fd5488909d726f5994b8d0ca261b32d926ca7919081900360800190a4341561088157610847610449565b6001600160a01b03166108fc349081150290604051600060405180830381858888f1935050505015801561087f573d6000803e3d6000fd5b505b95945050505050565b60045490565b6001546001600160a01b031681565b60006108a9610b80565b6000546001600160a01b039081169116146108f9576040805162461bcd60e51b81526020600482018190526024820152600080516020611f3a833981519152604482015290519081900360640190fd5b826001600160a01b031663a9059cbb610910610449565b846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561095757600080fd5b505af115801561096b573d6000803e3d6000fd5b505050506040513d602081101561098157600080fd5b50519392505050565b610992610b80565b6000546001600160a01b039081169116146109e2576040805162461bcd60e51b81526020600482018190526024820152600080516020611f3a833981519152604482015290519081900360640190fd5b6001546001600160a01b031615610a2a5760405162461bcd60e51b8152600401808060200182810382526024815260200180611eee6024913960400191505060405180910390fd5b604080516001600160a01b038316815290517f0ac885cfcac9d1450e80f787dbf9546001fb50414106435b10b1d27b448b86689181900360200190a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b610a90610b80565b6000546001600160a01b03908116911614610ae0576040805162461bcd60e51b81526020600482018190526024820152600080516020611f3a833981519152604482015290519081900360640190fd5b6001600160a01b038116610b255760405162461bcd60e51b8152600401808060200182810382526026815260200180611ea26026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b61131080610b928339019056fe6080604052600060055534801561001557600080fd5b50600061002061006f565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610073565b3390565b61128e806100826000396000f3fe6080604052600436106101025760003560e01c80638da5cb5b11610095578063ca628c7811610064578063ca628c78146103fa578063e43608d81461040f578063efe7a50414610424578063f2fde38b14610439578063fc0c546a1461046c5761024e565b80638da5cb5b146103885780639ddb9ee11461039d578063aa1cf2a2146103d0578063ba9a061a146103e55761024e565b80634e71d92d116100d15780634e71d92d1461030357806350f3fc81146103185780636b8550ec1461035e578063715018a6146103735761024e565b806302e3cb0b146102535780631487b9d21461027a5780632a0722a6146102d95780632db094ac146102ee5761024e565b3661024e5742600154111561015e576040805162461bcd60e51b815260206004820181905260248201527f546865206f66666572696e6720686173206e6f74207374617274656420796574604482015290519081900360640190fd5b6002544211156101b5576040805162461bcd60e51b815260206004820152601e60248201527f546865206f66666572696e672068617320616c726561647920656e6465640000604482015290519081900360640190fd5b60058054349081019091553360008181526007602090815260408083208054860190556008805460018101825593527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee390920180546001600160a01b031916841790558151938452905191927f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874929081900390910190a2005b600080fd5b34801561025f57600080fd5b50610268610481565b60408051918252519081900360200190f35b34801561028657600080fd5b506102d7600480360360e081101561029d57600080fd5b506001600160a01b038135811691602081013582169160408201359160608101359160808201359160a08101359160c09091013516610487565b005b3480156102e557600080fd5b506102686105c2565b3480156102fa57600080fd5b506102d76105c8565b34801561030f57600080fd5b506102d7610712565b34801561032457600080fd5b506103426004803603602081101561033b57600080fd5b5035610841565b604080516001600160a01b039092168252519081900360200190f35b34801561036a57600080fd5b50610268610868565b34801561037f57600080fd5b506102d761086e565b34801561039457600080fd5b50610342610910565b3480156103a957600080fd5b50610268600480360360208110156103c057600080fd5b50356001600160a01b031661091f565b3480156103dc57600080fd5b50610268610931565b3480156103f157600080fd5b50610268610937565b34801561040657600080fd5b506102d761093d565b34801561041b57600080fd5b506102d7610a2d565b34801561043057600080fd5b50610268610b5e565b34801561044557600080fd5b506102d76004803603602081101561045c57600080fd5b50356001600160a01b0316610b64565b34801561047857600080fd5b50610342610c5c565b60055481565b60065460ff16156104df576040805162461bcd60e51b815260206004820152601c60248201527f636f6e747261637420616c726561647920696e697469616c6973656400000000604482015290519081900360640190fd5b83831161051d5760405162461bcd60e51b81526004018080602001828103825260248152602001806111256024913960400191505060405180910390fd5b6000821161055c5760405162461bcd60e51b815260040180806020018281038252602f815260200180611199602f913960400191505060405180910390fd5b600980546001600160a01b0319166001600160a01b03881617905560038590556001848155600284905560048390556006805460ff191690911790556105a181610b64565b6009546105b9906001600160a01b0316883088610c6b565b50505050505050565b60045481565b6105d0610ccb565b6000546001600160a01b03908116911614610620576040805162461bcd60e51b8152602060048201819052602482015260008051602061120f833981519152604482015290519081900360640190fd5b4260025462278d00011061067b576040805162461bcd60e51b815260206004820152601a60248201527f5769746864726177616c20756e617661696c61626c6520796574000000000000604482015290519081900360640190fd5b610710610686610910565b600954604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156106d157600080fd5b505afa1580156106e5573d6000803e3d6000fd5b505050506040513d60208110156106fb57600080fd5b50516009546001600160a01b03169190610ccf565b565b600254421161072057600080fd5b3360009081526007602052604090205461073957600080fd5b3360009081526007602052604081208054919055600454600554106107d557600061077b60055461077584600354610d2690919063ffffffff16565b90610d88565b600954909150610795906001600160a01b03163383610ccf565b6040805183815260208101839052815133927f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a928290030190a25061083e565b604051339082156108fc029083906000818181858888f19350505050158015610802573d6000803e3d6000fd5b506040805182815260006020820152815133927f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a928290030190a25b50565b6008818154811061084e57fe5b6000918252602090912001546001600160a01b0316905081565b60085490565b610876610ccb565b6000546001600160a01b039081169116146108c6576040805162461bcd60e51b8152602060048201819052602482015260008051602061120f833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60076020526000908152604090205481565b60035481565b60015481565b610945610ccb565b6000546001600160a01b03908116911614610995576040805162461bcd60e51b8152602060048201819052602482015260008051602061120f833981519152604482015290519081900360640190fd5b42600254106109eb576040805162461bcd60e51b815260206004820152601e60248201527f546865206f66666572696e67206d75737420626520636f6d706c657465640000604482015290519081900360640190fd5b6004546005541061067b5760405162461bcd60e51b81526004018080602001828103825260268152602001806111496026913960400191505060405180910390fd5b610a35610ccb565b6000546001600160a01b03908116911614610a85576040805162461bcd60e51b8152602060048201819052602482015260008051602061120f833981519152604482015290519081900360640190fd5b4260025410610adb576040805162461bcd60e51b815260206004820152601e60248201527f546865206f66666572696e67206d75737420626520636f6d706c657465640000604482015290519081900360640190fd5b6004546005541015610b1e5760405162461bcd60e51b815260040180806020018281038252602a81526020018061116f602a913960400191505060405180910390fd5b610b26610910565b6001600160a01b03166108fc479081150290604051600060405180830381858888f1935050505015801561083e573d6000803e3d6000fd5b60025481565b610b6c610ccb565b6000546001600160a01b03908116911614610bbc576040805162461bcd60e51b8152602060048201819052602482015260008051602061120f833981519152604482015290519081900360640190fd5b6001600160a01b038116610c015760405162461bcd60e51b81526004018080602001828103825260268152602001806110ff6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6009546001600160a01b031681565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610cc5908590610dca565b50505050565b3390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610d21908490610dca565b505050565b600082610d3557506000610d82565b82820282848281610d4257fe5b0414610d7f5760405162461bcd60e51b81526004018080602001828103825260218152602001806111ee6021913960400191505060405180910390fd5b90505b92915050565b6000610d7f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610e7b565b6060610e1f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f1f9092919063ffffffff16565b805190915015610d2157808060200190516020811015610e3e57600080fd5b5051610d215760405162461bcd60e51b815260040180806020018281038252602a81526020018061122f602a913960400191505060405180910390fd5b60008183610f075760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ecc578181015183820152602001610eb4565b50505050905090810190601f168015610ef95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610f1357fe5b049150505b9392505050565b6060610f2e8484600085610f36565b949350505050565b606082471015610f775760405162461bcd60e51b81526004018080602001828103825260268152602001806111c86026913960400191505060405180910390fd5b610f8085611092565b610fd1576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106110105780518252601f199092019160209182019101610ff1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611072576040519150601f19603f3d011682016040523d82523d6000602084013e611077565b606091505b5091509150611087828286611098565b979650505050505050565b3b151590565b606083156110a7575081610f18565b8251156110b75782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315610ecc578181015183820152602001610eb456fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373656e6420646174652063616e6e6f74206265206265666f7265207374617274206461746554686520726571756972656420616d6f756e7420686173206265656e2070726f76696465642154686520726571756972656420616d6f756e7420686173206e6f74206265656e2070726f766964656421746865206d696e696d756d20726169736520616d6f756e74206d7573742062652067726561746572207468616e2030416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220d1ec38d9f9cb0a5d740260d25ffaa917864c933112d702ebaf452fe7210aa19464736f6c634300060c00334f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737346656520746f206c61756e636820636f6e747261637420697320696e73756666696369656e746e657720666163746f7279206164647265737320697320616c7265616479206f776e6564456e6420646174652063616e6e6f74206265206265666f72652074686520737461727420646174654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212202c056706c5f2cc58b378b41a298f8c60573953f18ac364078379394f0f4bc45664736f6c634300060c0033",
  "deployedSourceMap": "3601:2377:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5961:8;;;3601:2377;;;;4138:161;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4138:161:6;;:::i;:::-;;3737:32;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1706:145:1;;;;;;;;;;;;;:::i;3822:25:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3822:25:6;;:::i;:::-;;;;-1:-1:-1;;;;;3822:25:6;;;;;;;;;;;;;;3775:41;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3775:41:6;-1:-1:-1;;;;;3775:41:6;;:::i;:::-;;;;;;;;;;;;;;;;;;1083:77:1;;;;;;;;;;;;;:::i;4833:1084:6:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4833:1084:6;;;;;;;;;;;;;;;;;;;;;;;:::i;4305:96::-;;;;;;;;;;;;;:::i;3706:25::-;;;;;;;;;;;;;:::i;4648:179::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4648:179:6;;;;;;;;:::i;4407:235::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4407:235:6;-1:-1:-1;;;;;4407:235:6;;:::i;2000:240:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2000:240:1;-1:-1:-1;;;;;2000:240:1;;:::i;4138:161:6:-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;4234:10:6::1;::::0;4216:42:::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;;;::::1;4268:10;:24:::0;4138:161::o;3737:32::-;;;;:::o;1706:145:1:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;1812:1:::1;1796:6:::0;;1775:40:::1;::::0;-1:-1:-1;;;;;1796:6:1;;::::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1842:1;1825:19:::0;;-1:-1:-1;;;;;;1825:19:1::1;::::0;;1706:145::o;3822:25:6:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3822:25:6;;-1:-1:-1;3822:25:6;:::o;3775:41::-;;;;;;;;;;;;;;;:::o;1083:77:1:-;1121:7;1147:6;-1:-1:-1;;;;;1147:6:1;1083:77;:::o;4833:1084:6:-;5018:16;5071:10;;5058:9;:23;;5050:74;;;;-1:-1:-1;;;5050:74:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5157:1;5142:12;:16;5134:48;;;;;-1:-1:-1;;;5134:48:6;;;;;;;;;;;;-1:-1:-1;;;5134:48:6;;;;;;;;;;;;;;;5211:10;5200:8;:21;5192:74;;;;-1:-1:-1;;;5192:74:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5282:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5318:60:6;;;-1:-1:-1;;;5318:60:6;;5338:10;5318:60;;;;5358:4;5318:60;;;;;;;;;;;;5276:24;;-1:-1:-1;;;;;;5318:19:6;;;;;:60;;;;;;;;;;;;;;;-1:-1:-1;5318:19:6;:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5318:60:6;5310:105;;;;;-1:-1:-1;;;5310:105:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5433:6;-1:-1:-1;;;;;5433:14:6;;5456:3;5462:12;5433:42;;;;;;;;;;;;;-1:-1:-1;;;;;5433:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5433:42:6;5425:82;;;;;-1:-1:-1;;;5425:82:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;5517:114;;;-1:-1:-1;;;5517:114:6;;5552:4;5517:114;;;;-1:-1:-1;;;;;5517:114:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5620:10;5517:114;;;;;;:26;;;;;;:114;;;;;-1:-1:-1;;5517:114:6;;;;;;;;-1:-1:-1;5517:26:6;:114;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;5641:23:6;;;;;;;:9;:23;;;;;;;;:30;;-1:-1:-1;;5641:30:6;5667:4;5641:30;;;;;;5681:8;:27;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5681:27:6;;;;;5723:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5641:23:6;;5736:10;;5723:99;;;;;;;;;;5836:9;:13;5832:79;;5872:7;:5;:7::i;:::-;-1:-1:-1;;;;;5864:25:6;:36;5890:9;5864:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5832:79;4833:1084;;;;;;;:::o;4305:96::-;4379:8;:15;4305:96;:::o;3706:25::-;;;-1:-1:-1;;;;;3706:25:6;;:::o;4648:179::-;4743:12;1297::1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;4781:12:6::1;-1:-1:-1::0;;;;;4774:29:6::1;;4804:7;:5;:7::i;:::-;4813:6;4774:46;;;;;;;;;;;;;-1:-1:-1::0;;;;;4774:46:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;4774:46:6;;4648:179;-1:-1:-1;;;4648:179:6:o;4407:235::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;4491:10:6::1;::::0;-1:-1:-1;;;;;4491:10:6::1;:24:::0;4483:73:::1;;;;-1:-1:-1::0;;;4483:73:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4571:30;::::0;;-1:-1:-1;;;;;4571:30:6;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;::::1;4611:10;:24:::0;;-1:-1:-1;;;;;;4611:24:6::1;-1:-1:-1::0;;;;;4611:24:6;;;::::1;::::0;;;::::1;::::0;;4407:235::o;2000:240:1:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;2088:22:1;::::1;2080:73;;;;-1:-1:-1::0;;;2080:73:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:6;::::0;;2168:38:::1;::::0;-1:-1:-1;;;;;2168:38:1;;::::1;::::0;2189:6;::::1;::::0;2168:38:::1;::::0;::::1;2216:6;:17:::0;;-1:-1:-1;;;;;;2216:17:1::1;-1:-1:-1::0;;;;;2216:17:1;;;::::1;::::0;;;::::1;::::0;;2000:240::o;598:104:0:-;685:10;598:104;:::o;-1:-1:-1:-;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    3601,
    5978
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA1D555E8 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA1D555E8 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xC66301B2 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xCCDB3F45 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xDC39D06D EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xDE0946AF EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x298 JUMPI PUSH2 0xB5 JUMP JUMPDEST DUP1 PUSH4 0x182A7506 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x1A7626E7 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x7ACC0B20 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x7FD29192 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AF JUMPI PUSH2 0xB5 JUMP JUMPDEST CALLDATASIZE PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x36B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x449 JUMP JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x458 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH2 0x88A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x890 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x89F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x98A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA88 JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x323 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD PUSH32 0xCC2F49C6214278AE5862935EFF953448E8E69118D10ABFAFAF63EA6AA35255CB SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x373 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3C3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x41A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD CALLVALUE LT ISZERO PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EC8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x4E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BC81D1BDAD95B9CC81CDD589B5A5D1D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 DUP4 GT PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F12 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x530 SWAP1 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x54C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x623 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E207472616E7366657220746F20666163746F7279206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 DUP3 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x68E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x6F7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E20617070726F76616C20756E7375636365737366756C0000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xA43DCE9 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x84 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xA4 DUP3 ADD DUP6 SWAP1 MSTORE CALLER PUSH1 0xC4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP4 AND SWAP2 PUSH4 0x1487B9D2 SWAP2 PUSH1 0xE4 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x76A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x77E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP4 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE DUP2 MLOAD DUP11 DUP2 MSTORE SWAP1 DUP2 ADD DUP10 SWAP1 MSTORE DUP1 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 MLOAD SWAP3 DUP11 AND SWAP4 POP SWAP1 SWAP2 CALLER SWAP2 PUSH32 0x3AEA98549091F8031EF0F0DC5B5FD5488909D726F5994B8D0CA261B32D926CA7 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG4 CALLVALUE ISZERO PUSH2 0x881 JUMPI PUSH2 0x847 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x87F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A9 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x8F9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x910 PUSH2 0x449 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x96B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x981 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x992 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EEE PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0xAC885CFCAC9D1450E80F787DBF9546001FB50414106435B10B1D27B448B8668 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA90 PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xAE0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EA2 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1310 DUP1 PUSH2 0xB92 DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x20 PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x73 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x128E DUP1 PUSH2 0x82 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x102 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCA628C78 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCA628C78 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xE43608D8 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xEFE7A504 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x46C JUMPI PUSH2 0x24E JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x9DDB9EE1 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xAA1CF2A2 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xBA9A061A EQ PUSH2 0x3E5 JUMPI PUSH2 0x24E JUMP JUMPDEST DUP1 PUSH4 0x4E71D92D GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x50F3FC81 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x6B8550EC EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x373 JUMPI PUSH2 0x24E JUMP JUMPDEST DUP1 PUSH4 0x2E3CB0B EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x1487B9D2 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x2A0722A6 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x2DB094AC EQ PUSH2 0x2EE JUMPI PUSH2 0x24E JUMP JUMPDEST CALLDATASIZE PUSH2 0x24E JUMPI TIMESTAMP PUSH1 0x1 SLOAD GT ISZERO PUSH2 0x15E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206F66666572696E6720686173206E6F74207374617274656420796574 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206F66666572696E672068617320616C726561647920656E6465640000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD CALLVALUE SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP4 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0xC0 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x487 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x5C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x5C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x712 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x841 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x868 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x86E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH2 0x910 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x91F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x931 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x937 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x93D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0xA2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0xB5E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB64 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F6E747261637420616C726561647920696E697469616C6973656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 DUP4 GT PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1125 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1199 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE PUSH1 0x3 DUP6 SWAP1 SSTORE PUSH1 0x1 DUP5 DUP2 SSTORE PUSH1 0x2 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP4 SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x5A1 DUP2 PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x5B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 ADDRESS DUP9 PUSH2 0xC6B JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5D0 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x620 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x2 SLOAD PUSH3 0x278D00 ADD LT PUSH2 0x67B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20756E617661696C61626C6520796574000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x710 PUSH2 0x686 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0xCCF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP GT PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD LT PUSH2 0x7D5 JUMPI PUSH1 0x0 PUSH2 0x77B PUSH1 0x5 SLOAD PUSH2 0x775 DUP5 PUSH1 0x3 SLOAD PUSH2 0xD26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x795 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP PUSH2 0x83E JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x802 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x84E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x876 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x8C6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x945 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x995 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x2 SLOAD LT PUSH2 0x9EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206F66666572696E67206D75737420626520636F6D706C657465640000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD LT PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1149 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA35 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA85 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x2 SLOAD LT PUSH2 0xADB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206F66666572696E67206D75737420626520636F6D706C657465640000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD LT ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x116F PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB26 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x83E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB6C PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xBBC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x120F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10FF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xCC5 SWAP1 DUP6 SWAP1 PUSH2 0xDCA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xD21 SWAP1 DUP5 SWAP1 PUSH2 0xDCA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD35 JUMPI POP PUSH1 0x0 PUSH2 0xD82 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xD42 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xD7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11EE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE1F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF1F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD21 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xD21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x122F PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xECC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEB4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEF9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xF13 JUMPI INVALID JUMPDEST DIV SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF2E DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xF36 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xF77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11C8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF80 DUP6 PUSH2 0x1092 JUMP JUMPDEST PUSH2 0xFD1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1010 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xFF1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1072 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1087 DUP3 DUP3 DUP7 PUSH2 0x1098 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x10A7 JUMPI POP DUP2 PUSH2 0xF18 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x10B7 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD DUP6 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xECC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEB4 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373656E6420646174652063616E6E6F7420 PUSH3 0x652062 PUSH6 0x666F72652073 PUSH21 0x617274206461746554686520726571756972656420 PUSH2 0x6D6F PUSH22 0x6E7420686173206265656E2070726F76696465642154 PUSH9 0x652072657175697265 PUSH5 0x20616D6F75 PUSH15 0x7420686173206E6F74206265656E20 PUSH17 0x726F766964656421746865206D696E696D PUSH22 0x6D20726169736520616D6F756E74206D757374206265 KECCAK256 PUSH8 0x7265617465722074 PUSH9 0x616E20304164647265 PUSH20 0x733A20696E73756666696369656E742062616C61 PUSH15 0x636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F774F776E61626C653A20 PUSH4 0x616C6C65 PUSH19 0x206973206E6F7420746865206F776E65725361 PUSH7 0x6545524332303A KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220D1EC38D9 0xF9 0xCB EXP 0x5D PUSH21 0x260D25FFAA917864C933112D702EBAF452FE7210A LOG1 SWAP5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737346656520746F206C61756E636820636F PUSH15 0x747261637420697320696E73756666 PUSH10 0x6369656E746E65772066 PUSH2 0x6374 PUSH16 0x7279206164647265737320697320616C PUSH19 0x65616479206F776E6564456E64206461746520 PUSH4 0x616E6E6F PUSH21 0x206265206265666F72652074686520737461727420 PUSH5 0x6174654F77 PUSH15 0x61626C653A2063616C6C6572206973 KECCAK256 PUSH15 0x6F7420746865206F776E6572A26469 PUSH17 0x6673582212202C056706C5F2CC58B378B4 BYTE 0x29 DUP16 DUP13 PUSH1 0x57 CODECOPY MSTORE8 CALL DUP11 0xC3 PUSH5 0x78379394F 0xF 0x4B 0xC4 JUMP PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "LT",
      "path": "6"
    },
    "9": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAB"
    },
    "12": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "13": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "SHR",
      "path": "6"
    },
    "19": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "DUP1",
      "path": "6"
    },
    "20": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA1D555E8"
    },
    "25": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "GT",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x64"
    },
    "29": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "30": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "DUP1",
      "path": "6"
    },
    "31": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA1D555E8"
    },
    "36": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "EQ",
      "path": "6"
    },
    "37": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C4"
    },
    "40": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "41": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "DUP1",
      "path": "6"
    },
    "42": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xC66301B2"
    },
    "47": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "EQ",
      "path": "6"
    },
    "48": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x202"
    },
    "51": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "52": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "DUP1",
      "path": "6"
    },
    "53": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xCCDB3F45"
    },
    "58": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "EQ",
      "path": "6"
    },
    "59": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x217"
    },
    "62": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "63": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "DUP1",
      "path": "6"
    },
    "64": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDC39D06D"
    },
    "69": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "EQ",
      "path": "6"
    },
    "70": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22C"
    },
    "73": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "74": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "DUP1",
      "path": "6"
    },
    "75": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDE0946AF"
    },
    "80": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "EQ",
      "path": "6"
    },
    "81": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x265"
    },
    "84": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "85": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "DUP1",
      "path": "6"
    },
    "86": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "EQ",
      "path": "6"
    },
    "92": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x298"
    },
    "95": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "96": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB5"
    },
    "99": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMP",
      "path": "6"
    },
    "100": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "101": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "DUP1",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x182A7506"
    },
    "107": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "EQ",
      "path": "6"
    },
    "108": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBA"
    },
    "111": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "112": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "DUP1",
      "path": "6"
    },
    "113": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1A7626E7"
    },
    "118": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "EQ",
      "path": "6"
    },
    "119": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE6"
    },
    "122": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "123": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "DUP1",
      "path": "6"
    },
    "124": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "129": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "EQ",
      "path": "6"
    },
    "130": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10D"
    },
    "133": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "134": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "DUP1",
      "path": "6"
    },
    "135": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x7ACC0B20"
    },
    "140": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "EQ",
      "path": "6"
    },
    "141": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x122"
    },
    "144": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "145": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "DUP1",
      "path": "6"
    },
    "146": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x7FD29192"
    },
    "151": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "EQ",
      "path": "6"
    },
    "152": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x168"
    },
    "155": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "156": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "DUP1",
      "path": "6"
    },
    "157": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "162": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "EQ",
      "path": "6"
    },
    "163": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AF"
    },
    "166": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "167": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB5"
    },
    "170": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMP",
      "path": "6"
    },
    "171": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "172": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "173": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB5"
    },
    "176": {
      "fn": null,
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "177": {
      "fn": "DynPoolFactory.<receive>",
      "offset": [
        5961,
        5969
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x0"
    },
    "179": {
      "fn": "DynPoolFactory.<receive>",
      "offset": [
        5961,
        5969
      ],
      "op": "DUP1",
      "path": "6"
    },
    "180": {
      "fn": "DynPoolFactory.<receive>",
      "offset": [
        5961,
        5969
      ],
      "op": "REVERT",
      "path": "6"
    },
    "181": {
      "offset": [
        3601,
        5978
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "182": {
      "fn": "DynPoolFactory.<receive>",
      "offset": [
        3601,
        5978
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "184": {
      "fn": "DynPoolFactory.<receive>",
      "offset": [
        3601,
        5978
      ],
      "op": "DUP1",
      "path": "6"
    },
    "185": {
      "first_revert": true,
      "fn": "DynPoolFactory.<receive>",
      "offset": [
        3601,
        5978
      ],
      "op": "REVERT",
      "path": "6"
    },
    "186": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "187": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "188": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "DUP1",
      "path": "6"
    },
    "189": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "190": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC6"
    },
    "193": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "194": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "196": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "DUP1",
      "path": "6"
    },
    "197": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "REVERT",
      "path": "6"
    },
    "198": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "199": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "POP",
      "path": "6"
    },
    "200": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE4"
    },
    "203": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "205": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "DUP1",
      "path": "6"
    },
    "206": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "207": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "SUB",
      "path": "6"
    },
    "208": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "210": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "DUP2",
      "path": "6"
    },
    "211": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "LT",
      "path": "6"
    },
    "212": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "213": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDD"
    },
    "216": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "217": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "219": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "DUP1",
      "path": "6"
    },
    "220": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "REVERT",
      "path": "6"
    },
    "221": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "222": {
      "op": "POP"
    },
    "223": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "224": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CB"
    },
    "227": {
      "fn": "DynPoolFactory.setMinimumFee",
      "jump": "i",
      "offset": [
        4138,
        4299
      ],
      "op": "JUMP",
      "path": "6"
    },
    "228": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "229": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "STOP",
      "path": "6"
    },
    "230": {
      "offset": [
        3737,
        3769
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "231": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "232": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "DUP1",
      "path": "6"
    },
    "233": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "234": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF2"
    },
    "237": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "238": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "240": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "DUP1",
      "path": "6"
    },
    "241": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "REVERT",
      "path": "6"
    },
    "242": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "243": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "POP",
      "path": "6"
    },
    "244": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFB"
    },
    "247": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x365"
    },
    "250": {
      "fn": "DynPoolFactory.setMinimumFee",
      "jump": "i",
      "offset": [
        3737,
        3769
      ],
      "op": "JUMP",
      "path": "6"
    },
    "251": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "252": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "254": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "DUP1",
      "path": "6"
    },
    "255": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "256": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "257": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "DUP3",
      "path": "6"
    },
    "258": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "259": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "260": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "261": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "DUP2",
      "path": "6"
    },
    "262": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "263": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "SUB",
      "path": "6"
    },
    "264": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "266": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "ADD",
      "path": "6"
    },
    "267": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "268": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "RETURN",
      "path": "6"
    },
    "269": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "270": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "271": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "DUP1",
      "path": "1"
    },
    "272": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "273": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x119"
    },
    "276": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "277": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "279": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "DUP1",
      "path": "1"
    },
    "280": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "REVERT",
      "path": "1"
    },
    "281": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "282": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "POP",
      "path": "1"
    },
    "283": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE4"
    },
    "286": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36B"
    },
    "289": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMP",
      "path": "1"
    },
    "290": {
      "offset": [
        3822,
        3847
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "291": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "292": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "DUP1",
      "path": "6"
    },
    "293": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "294": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12E"
    },
    "297": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "298": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "300": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "DUP1",
      "path": "6"
    },
    "301": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "REVERT",
      "path": "6"
    },
    "302": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "303": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "POP",
      "path": "6"
    },
    "304": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14C"
    },
    "307": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "309": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "DUP1",
      "path": "6"
    },
    "310": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "311": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "SUB",
      "path": "6"
    },
    "312": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "314": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "315": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "LT",
      "path": "6"
    },
    "316": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "317": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x145"
    },
    "320": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "321": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "323": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "DUP1",
      "path": "6"
    },
    "324": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "REVERT",
      "path": "6"
    },
    "325": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "326": {
      "op": "POP"
    },
    "327": {
      "offset": [
        3822,
        3847
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "328": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x40D"
    },
    "331": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        3822,
        3847
      ],
      "op": "JUMP",
      "path": "6"
    },
    "332": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "333": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "335": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "DUP1",
      "path": "6"
    },
    "336": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "343": {
      "op": "SHL"
    },
    "344": {
      "op": "SUB"
    },
    "345": {
      "offset": [
        3822,
        3847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "346": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "347": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "AND",
      "path": "6"
    },
    "348": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "DUP3",
      "path": "6"
    },
    "349": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "350": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "351": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "352": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "353": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "354": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "SUB",
      "path": "6"
    },
    "355": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "357": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "ADD",
      "path": "6"
    },
    "358": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "359": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "RETURN",
      "path": "6"
    },
    "360": {
      "offset": [
        3775,
        3816
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "361": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "362": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "DUP1",
      "path": "6"
    },
    "363": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "364": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x174"
    },
    "367": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "368": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "370": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "DUP1",
      "path": "6"
    },
    "371": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "REVERT",
      "path": "6"
    },
    "372": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "373": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "POP",
      "path": "6"
    },
    "374": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19B"
    },
    "377": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "379": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "DUP1",
      "path": "6"
    },
    "380": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "381": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "SUB",
      "path": "6"
    },
    "382": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "384": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "DUP2",
      "path": "6"
    },
    "385": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "LT",
      "path": "6"
    },
    "386": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "387": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18B"
    },
    "390": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "391": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "393": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "DUP1",
      "path": "6"
    },
    "394": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "REVERT",
      "path": "6"
    },
    "395": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "396": {
      "op": "POP"
    },
    "397": {
      "offset": [
        3775,
        3816
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "404": {
      "op": "SHL"
    },
    "405": {
      "op": "SUB"
    },
    "406": {
      "offset": [
        3775,
        3816
      ],
      "op": "AND",
      "path": "6"
    },
    "407": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x434"
    },
    "410": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        3775,
        3816
      ],
      "op": "JUMP",
      "path": "6"
    },
    "411": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "412": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "414": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "DUP1",
      "path": "6"
    },
    "415": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "416": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "417": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "418": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "419": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "DUP3",
      "path": "6"
    },
    "420": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "421": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "422": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "423": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "DUP2",
      "path": "6"
    },
    "424": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "425": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "SUB",
      "path": "6"
    },
    "426": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "428": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "ADD",
      "path": "6"
    },
    "429": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "430": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "RETURN",
      "path": "6"
    },
    "431": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "432": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "433": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "DUP1",
      "path": "1"
    },
    "434": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "435": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BB"
    },
    "438": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "439": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "441": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "DUP1",
      "path": "1"
    },
    "442": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "REVERT",
      "path": "1"
    },
    "443": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "444": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "POP",
      "path": "1"
    },
    "445": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14C"
    },
    "448": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x449"
    },
    "451": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMP",
      "path": "1"
    },
    "452": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "453": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14C"
    },
    "456": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "458": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "DUP1",
      "path": "6"
    },
    "459": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "460": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "SUB",
      "path": "6"
    },
    "461": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "463": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "DUP2",
      "path": "6"
    },
    "464": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "LT",
      "path": "6"
    },
    "465": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "466": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DA"
    },
    "469": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "470": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "472": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "DUP1",
      "path": "6"
    },
    "473": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "REVERT",
      "path": "6"
    },
    "474": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "475": {
      "op": "POP"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "482": {
      "op": "SHL"
    },
    "483": {
      "op": "SUB"
    },
    "484": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "DUP2",
      "path": "6"
    },
    "485": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "486": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "AND",
      "path": "6"
    },
    "487": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "488": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "490": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "DUP2",
      "path": "6"
    },
    "491": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "ADD",
      "path": "6"
    },
    "492": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "493": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "494": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "496": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "DUP2",
      "path": "6"
    },
    "497": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "ADD",
      "path": "6"
    },
    "498": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "499": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "500": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "502": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "DUP2",
      "path": "6"
    },
    "503": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "ADD",
      "path": "6"
    },
    "504": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "505": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "506": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "508": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "ADD",
      "path": "6"
    },
    "509": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "510": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x458"
    },
    "513": {
      "fn": "DynPoolFactory.deployIBCO",
      "jump": "i",
      "offset": [
        4833,
        5917
      ],
      "op": "JUMP",
      "path": "6"
    },
    "514": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "515": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "516": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "DUP1",
      "path": "6"
    },
    "517": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "518": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20E"
    },
    "521": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "522": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "524": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "DUP1",
      "path": "6"
    },
    "525": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "REVERT",
      "path": "6"
    },
    "526": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "527": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "POP",
      "path": "6"
    },
    "528": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFB"
    },
    "531": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x88A"
    },
    "534": {
      "fn": "DynPoolFactory.numberOfProducts",
      "jump": "i",
      "offset": [
        4305,
        4401
      ],
      "op": "JUMP",
      "path": "6"
    },
    "535": {
      "offset": [
        3706,
        3731
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "536": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "537": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "DUP1",
      "path": "6"
    },
    "538": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "539": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x223"
    },
    "542": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "543": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "545": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "DUP1",
      "path": "6"
    },
    "546": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "REVERT",
      "path": "6"
    },
    "547": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "548": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "POP",
      "path": "6"
    },
    "549": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14C"
    },
    "552": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x890"
    },
    "555": {
      "fn": "DynPoolFactory.numberOfProducts",
      "jump": "i",
      "offset": [
        3706,
        3731
      ],
      "op": "JUMP",
      "path": "6"
    },
    "556": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "557": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "558": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "DUP1",
      "path": "6"
    },
    "559": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "560": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x238"
    },
    "563": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "564": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "566": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "DUP1",
      "path": "6"
    },
    "567": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "REVERT",
      "path": "6"
    },
    "568": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "569": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "POP",
      "path": "6"
    },
    "570": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19B"
    },
    "573": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "575": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "DUP1",
      "path": "6"
    },
    "576": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "577": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "SUB",
      "path": "6"
    },
    "578": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "580": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "DUP2",
      "path": "6"
    },
    "581": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "LT",
      "path": "6"
    },
    "582": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "583": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24F"
    },
    "586": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "587": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "589": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "DUP1",
      "path": "6"
    },
    "590": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "REVERT",
      "path": "6"
    },
    "591": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "592": {
      "op": "POP"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "op": "SUB"
    },
    "601": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "DUP2",
      "path": "6"
    },
    "602": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "603": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "AND",
      "path": "6"
    },
    "604": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "605": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "607": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "ADD",
      "path": "6"
    },
    "608": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "609": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x89F"
    },
    "612": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "jump": "i",
      "offset": [
        4648,
        4827
      ],
      "op": "JUMP",
      "path": "6"
    },
    "613": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "614": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "615": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "DUP1",
      "path": "6"
    },
    "616": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "617": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x271"
    },
    "620": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "621": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "623": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "DUP1",
      "path": "6"
    },
    "624": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "REVERT",
      "path": "6"
    },
    "625": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "626": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "POP",
      "path": "6"
    },
    "627": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE4"
    },
    "630": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "632": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "DUP1",
      "path": "6"
    },
    "633": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "634": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "SUB",
      "path": "6"
    },
    "635": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "637": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "DUP2",
      "path": "6"
    },
    "638": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "LT",
      "path": "6"
    },
    "639": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "640": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x288"
    },
    "643": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "644": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "646": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "DUP1",
      "path": "6"
    },
    "647": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "REVERT",
      "path": "6"
    },
    "648": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "649": {
      "op": "POP"
    },
    "650": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "657": {
      "op": "SHL"
    },
    "658": {
      "op": "SUB"
    },
    "659": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "AND",
      "path": "6"
    },
    "660": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x98A"
    },
    "663": {
      "fn": "DynPoolFactory.deprecateFactory",
      "jump": "i",
      "offset": [
        4407,
        4642
      ],
      "op": "JUMP",
      "path": "6"
    },
    "664": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "665": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "666": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "667": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "668": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A4"
    },
    "671": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "672": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "674": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "675": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "REVERT",
      "path": "1"
    },
    "676": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "677": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "POP",
      "path": "1"
    },
    "678": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE4"
    },
    "681": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "683": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "684": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "685": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "SUB",
      "path": "1"
    },
    "686": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "688": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "DUP2",
      "path": "1"
    },
    "689": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "LT",
      "path": "1"
    },
    "690": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "691": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BB"
    },
    "694": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "695": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "697": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "698": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "REVERT",
      "path": "1"
    },
    "699": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "700": {
      "op": "POP"
    },
    "701": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "708": {
      "op": "SHL"
    },
    "709": {
      "op": "SUB"
    },
    "710": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "AND",
      "path": "1"
    },
    "711": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA88"
    },
    "714": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMP",
      "path": "1"
    },
    "715": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4138,
        4299
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "716": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D3"
    },
    "719": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB80"
    },
    "722": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "723": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "724": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "726": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "733": {
      "op": "SHL"
    },
    "734": {
      "op": "SUB"
    },
    "735": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "736": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "737": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "738": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "739": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "740": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "741": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x323"
    },
    "744": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "745": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "747": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "748": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "749": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "757": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "758": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "760": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "762": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "763": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "764": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "765": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "766": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "767": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "769": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "770": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "771": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "774": {
      "op": "DUP1"
    },
    "775": {
      "op": "MLOAD"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "778": {
      "op": "PUSH2",
      "value": "0x1F3A"
    },
    "781": {
      "op": "DUP4"
    },
    "782": {
      "op": "CODECOPY"
    },
    "783": {
      "op": "DUP2"
    },
    "784": {
      "op": "MLOAD"
    },
    "785": {
      "op": "SWAP2"
    },
    "786": {
      "op": "MSTORE"
    },
    "787": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "789": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "790": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "791": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "792": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "793": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "794": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "795": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "796": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "797": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "798": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "800": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "801": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "802": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "803": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "804": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4234,
        4244
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x2"
    },
    "806": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4234,
        4244
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "807": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "809": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "810": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "811": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "812": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "DUP3",
      "path": "6"
    },
    "813": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "814": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "816": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "DUP3",
      "path": "6"
    },
    "817": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "ADD",
      "path": "6"
    },
    "818": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "DUP4",
      "path": "6"
    },
    "819": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "820": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "821": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "DUP1",
      "path": "6"
    },
    "822": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "823": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xCC2F49C6214278AE5862935EFF953448E8E69118D10ABFAFAF63EA6AA35255CB"
    },
    "856": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "857": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "DUP2",
      "path": "6"
    },
    "858": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "859": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "SUB",
      "path": "6"
    },
    "860": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "861": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "862": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "ADD",
      "path": "6"
    },
    "863": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "864": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4216,
        4258
      ],
      "op": "LOG1",
      "path": "6"
    },
    "865": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4268,
        4278
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x2"
    },
    "867": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        4268,
        4292
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "868": {
      "fn": "DynPoolFactory.setMinimumFee",
      "jump": "o",
      "offset": [
        4138,
        4299
      ],
      "op": "JUMP",
      "path": "6"
    },
    "869": {
      "offset": [
        3737,
        3769
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "870": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "872": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "873": {
      "fn": "DynPoolFactory.setMinimumFee",
      "offset": [
        3737,
        3769
      ],
      "op": "DUP2",
      "path": "6"
    },
    "874": {
      "fn": "DynPoolFactory.setMinimumFee",
      "jump": "o",
      "offset": [
        3737,
        3769
      ],
      "op": "JUMP",
      "path": "6"
    },
    "875": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "876": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x373"
    },
    "879": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB80"
    },
    "882": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "883": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "884": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "886": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "893": {
      "op": "SHL"
    },
    "894": {
      "op": "SUB"
    },
    "895": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "896": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "897": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "898": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "899": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "900": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "901": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C3"
    },
    "904": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "905": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "907": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "908": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "909": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "913": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "915": {
      "op": "SHL"
    },
    "916": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "917": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "918": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "920": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "922": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "923": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "924": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "925": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "926": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "927": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "929": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "930": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "931": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "934": {
      "op": "DUP1"
    },
    "935": {
      "op": "MLOAD"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "938": {
      "op": "PUSH2",
      "value": "0x1F3A"
    },
    "941": {
      "op": "DUP4"
    },
    "942": {
      "op": "CODECOPY"
    },
    "943": {
      "op": "DUP2"
    },
    "944": {
      "op": "MLOAD"
    },
    "945": {
      "op": "SWAP2"
    },
    "946": {
      "op": "MSTORE"
    },
    "947": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "949": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "950": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "951": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "952": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "953": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "954": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "955": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "956": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "957": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "958": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "960": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "961": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "962": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "963": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "964": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x0"
    },
    "966": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "DUP1",
      "path": "1"
    },
    "967": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "968": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "970": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "977": {
      "op": "SHL"
    },
    "978": {
      "op": "SUB"
    },
    "979": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "980": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "981": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "AND",
      "path": "1"
    },
    "982": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "983": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1016": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1017": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1018": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1019": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1020": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1842,
        1843
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x0"
    },
    "1022": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1023": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1030": {
      "op": "SHL"
    },
    "1031": {
      "op": "SUB"
    },
    "1032": {
      "op": "NOT"
    },
    "1033": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "AND",
      "path": "1"
    },
    "1034": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1035": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1036": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1037": {
      "offset": [
        3822,
        3847
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1038": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1040": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1041": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1042": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1043": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1044": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "LT",
      "path": "6"
    },
    "1045": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41A"
    },
    "1048": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1049": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "INVALID",
      "path": "6"
    },
    "1050": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1051": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1053": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1054": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1055": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1056": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1058": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1059": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1060": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1061": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "ADD",
      "path": "6"
    },
    "1062": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1069": {
      "op": "SHL"
    },
    "1070": {
      "op": "SUB"
    },
    "1071": {
      "offset": [
        3822,
        3847
      ],
      "op": "AND",
      "path": "6"
    },
    "1072": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3822,
        3847
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "offset": [
        3822,
        3847
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1075": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        3822,
        3847
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1076": {
      "offset": [
        3775,
        3816
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1077": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1079": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1081": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1082": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1084": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1085": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1086": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1087": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1089": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1090": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1091": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1092": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1094": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "AND",
      "path": "6"
    },
    "1095": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        3775,
        3816
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1096": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        3775,
        3816
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1097": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1098": {
      "fn": "Ownable.owner",
      "offset": [
        1121,
        1128
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1100": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 5
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1107": {
      "op": "SHL"
    },
    "1108": {
      "op": "SUB"
    },
    "1109": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "AND",
      "path": "1"
    },
    "1110": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1111": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1112": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1113": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5018,
        5034
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1115": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5071,
        5081
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x2"
    },
    "1117": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5071,
        5081
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1118": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5058,
        5067
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1119": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5058,
        5081
      ],
      "op": "LT",
      "path": "6"
    },
    "1120": {
      "branch": 26,
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5058,
        5081
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1121": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x49B"
    },
    "1124": {
      "branch": 26,
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1125": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1127": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1128": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1134": {
      "op": "SHL"
    },
    "1135": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1136": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1137": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1139": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "ADD",
      "path": "6"
    },
    "1140": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1141": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1142": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1144": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "ADD",
      "path": "6"
    },
    "1145": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1146": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1147": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "SUB",
      "path": "6"
    },
    "1148": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1149": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1150": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x26"
    },
    "1152": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1153": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1154": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1156": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "ADD",
      "path": "6"
    },
    "1157": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1158": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EC8"
    },
    "1161": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x26"
    },
    "1163": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1164": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "1165": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1167": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "ADD",
      "path": "6"
    },
    "1168": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1169": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "POP",
      "path": "6"
    },
    "1170": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "POP",
      "path": "6"
    },
    "1171": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1173": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1174": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1175": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1176": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "SUB",
      "path": "6"
    },
    "1177": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1178": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1179": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5050,
        5124
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1180": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5157,
        5158
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 7,
      "value": "0x0"
    },
    "1182": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5142,
        5154
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1183": {
      "branch": 27,
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5142,
        5158
      ],
      "op": "GT",
      "path": "6"
    },
    "1184": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4E6"
    },
    "1187": {
      "branch": 27,
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1188": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1190": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1191": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1192": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1198": {
      "op": "SHL"
    },
    "1199": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1200": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1201": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1203": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1205": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1206": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "ADD",
      "path": "6"
    },
    "1207": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1208": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x13"
    },
    "1210": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1212": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1213": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "ADD",
      "path": "6"
    },
    "1214": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1215": {
      "op": "PUSH19",
      "value": "0x139BC81D1BDAD95B9CC81CDD589B5A5D1D1959"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "1237": {
      "op": "SHL"
    },
    "1238": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1240": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1241": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "ADD",
      "path": "6"
    },
    "1242": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1243": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1244": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1245": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1246": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1247": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1248": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "SUB",
      "path": "6"
    },
    "1249": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1251": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "ADD",
      "path": "6"
    },
    "1252": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1253": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1254": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5134,
        5182
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1255": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5211,
        5221
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 8
    },
    "1256": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5200,
        5208
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1257": {
      "branch": 28,
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5200,
        5221
      ],
      "op": "GT",
      "path": "6"
    },
    "1258": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x524"
    },
    "1261": {
      "branch": 28,
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1262": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1264": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1265": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1271": {
      "op": "SHL"
    },
    "1272": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1273": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1274": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1276": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "ADD",
      "path": "6"
    },
    "1277": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1278": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1279": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1281": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "ADD",
      "path": "6"
    },
    "1282": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1283": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1284": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "SUB",
      "path": "6"
    },
    "1285": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1286": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1287": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x28"
    },
    "1289": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1290": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1291": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1293": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "ADD",
      "path": "6"
    },
    "1294": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1295": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F12"
    },
    "1298": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x28"
    },
    "1300": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1301": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "1302": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1304": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "ADD",
      "path": "6"
    },
    "1305": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1306": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "POP",
      "path": "6"
    },
    "1307": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "POP",
      "path": "6"
    },
    "1308": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1310": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1311": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1312": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1313": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "SUB",
      "path": "6"
    },
    "1314": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1315": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1316": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5192,
        5266
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1317": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x40"
    },
    "1319": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1320": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x530"
    },
    "1323": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1324": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB84"
    },
    "1327": {
      "fn": "DynPoolFactory.deployIBCO",
      "jump": "i",
      "offset": [
        5282,
        5300
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1328": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1329": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1331": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1332": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1333": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1334": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "SUB",
      "path": "6"
    },
    "1335": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1336": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1338": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "CREATE",
      "path": "6"
    },
    "1339": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1340": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1341": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1342": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1343": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x54C"
    },
    "1346": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1347": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1348": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1350": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1351": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1352": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1353": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1355": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1356": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5282,
        5300
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1357": {
      "op": "POP"
    },
    "1358": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 10,
      "value": "0x40"
    },
    "1360": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1361": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1362": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1369": {
      "op": "SHL"
    },
    "1370": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1371": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1372": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5338,
        5348
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1373": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1375": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1376": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "ADD",
      "path": "6"
    },
    "1377": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1378": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5358,
        5362
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "1379": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1381": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1382": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "ADD",
      "path": "6"
    },
    "1383": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1384": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1386": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1387": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "ADD",
      "path": "6"
    },
    "1388": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1389": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1390": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1391": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1392": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1393": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5276,
        5300
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1394": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5276,
        5300
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1395": {
      "op": "POP"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1402": {
      "op": "SHL"
    },
    "1403": {
      "op": "SUB"
    },
    "1404": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5337
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1405": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5337
      ],
      "op": "AND",
      "path": "6"
    },
    "1406": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5337
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1407": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5337
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "1412": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5337
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1413": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1415": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1416": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1417": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "ADD",
      "path": "6"
    },
    "1418": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1419": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1421": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1422": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1423": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1424": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1425": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1426": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1427": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "SUB",
      "path": "6"
    },
    "1428": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "ADD",
      "path": "6"
    },
    "1429": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1432": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5337
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1433": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1434": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1435": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1436": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1437": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1438": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A6"
    },
    "1441": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1442": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1444": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1445": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1446": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1447": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "POP",
      "path": "6"
    },
    "1448": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "GAS",
      "path": "6"
    },
    "1449": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "CALL",
      "path": "6"
    },
    "1450": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1451": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1452": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1453": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5BA"
    },
    "1456": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1457": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1458": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1460": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1461": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1462": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1463": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1465": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1466": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1467": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "POP",
      "path": "6"
    },
    "1468": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "POP",
      "path": "6"
    },
    "1469": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "POP",
      "path": "6"
    },
    "1470": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "POP",
      "path": "6"
    },
    "1471": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1473": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1474": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1475": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1477": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1478": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "LT",
      "path": "6"
    },
    "1479": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1480": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D0"
    },
    "1483": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1484": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1486": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1487": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1488": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1489": {
      "op": "POP"
    },
    "1490": {
      "branch": 29,
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5318,
        5378
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1491": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x623"
    },
    "1494": {
      "branch": 29,
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1495": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1497": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1498": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1499": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1505": {
      "op": "SHL"
    },
    "1506": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1507": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1508": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1510": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1512": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1513": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "ADD",
      "path": "6"
    },
    "1514": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1515": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1516": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1517": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1519": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1520": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "ADD",
      "path": "6"
    },
    "1521": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1522": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x746F6B656E207472616E7366657220746F20666163746F7279206661696C6564"
    },
    "1555": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1557": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1558": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "ADD",
      "path": "6"
    },
    "1559": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1560": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1561": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1562": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1563": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1564": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1565": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "SUB",
      "path": "6"
    },
    "1566": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1568": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "ADD",
      "path": "6"
    },
    "1569": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1570": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1571": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5310,
        5415
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1572": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5439
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 11
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1579": {
      "op": "SHL"
    },
    "1580": {
      "op": "SUB"
    },
    "1581": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5447
      ],
      "op": "AND",
      "path": "6"
    },
    "1582": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5447
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95EA7B3"
    },
    "1587": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5456,
        5459
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1588": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5462,
        5474
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1589": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1591": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1592": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1593": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1598": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "AND",
      "path": "6"
    },
    "1599": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "1601": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "SHL",
      "path": "6"
    },
    "1602": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1603": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1604": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1606": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "ADD",
      "path": "6"
    },
    "1607": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1608": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1615": {
      "op": "SHL"
    },
    "1616": {
      "op": "SUB"
    },
    "1617": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "AND",
      "path": "6"
    },
    "1618": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1619": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1620": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1622": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "ADD",
      "path": "6"
    },
    "1623": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1624": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1625": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1626": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1628": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "ADD",
      "path": "6"
    },
    "1629": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1630": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "POP",
      "path": "6"
    },
    "1631": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "POP",
      "path": "6"
    },
    "1632": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "POP",
      "path": "6"
    },
    "1633": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1635": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1637": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1638": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1639": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1640": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "SUB",
      "path": "6"
    },
    "1641": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1642": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1644": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1645": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1646": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1647": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1648": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1649": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1650": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x67A"
    },
    "1653": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1654": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1656": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1657": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1658": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1659": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "POP",
      "path": "6"
    },
    "1660": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "GAS",
      "path": "6"
    },
    "1661": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "CALL",
      "path": "6"
    },
    "1662": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1663": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1664": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1665": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x68E"
    },
    "1668": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1669": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1670": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1672": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1673": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1674": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1675": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1677": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1678": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1679": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "POP",
      "path": "6"
    },
    "1680": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "POP",
      "path": "6"
    },
    "1681": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "POP",
      "path": "6"
    },
    "1682": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "POP",
      "path": "6"
    },
    "1683": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1685": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1686": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1687": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1689": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1690": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "LT",
      "path": "6"
    },
    "1691": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1692": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A4"
    },
    "1695": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1696": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1698": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1699": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1700": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1701": {
      "op": "POP"
    },
    "1702": {
      "branch": 30,
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5433,
        5475
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1703": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6F7"
    },
    "1706": {
      "branch": 30,
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1707": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1709": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1710": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1711": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1717": {
      "op": "SHL"
    },
    "1718": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1719": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1720": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1722": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1724": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1725": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "ADD",
      "path": "6"
    },
    "1726": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1727": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1B"
    },
    "1729": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1731": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1732": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "ADD",
      "path": "6"
    },
    "1733": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1734": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x746F6B656E20617070726F76616C20756E7375636365737366756C0000000000"
    },
    "1767": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1769": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1770": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "ADD",
      "path": "6"
    },
    "1771": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1772": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1773": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1774": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1775": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1776": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1777": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "SUB",
      "path": "6"
    },
    "1778": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1780": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "ADD",
      "path": "6"
    },
    "1781": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1782": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1783": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5425,
        5507
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1784": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 12,
      "value": "0x40"
    },
    "1786": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1787": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1788": {
      "op": "PUSH4",
      "value": "0xA43DCE9"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1795": {
      "op": "SHL"
    },
    "1796": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1797": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1798": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5552,
        5556
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "1799": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1801": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1802": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "ADD",
      "path": "6"
    },
    "1803": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1810": {
      "op": "SHL"
    },
    "1811": {
      "op": "SUB"
    },
    "1812": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1813": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1814": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "AND",
      "path": "6"
    },
    "1815": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1817": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1818": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "ADD",
      "path": "6"
    },
    "1819": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1820": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1822": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1823": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "ADD",
      "path": "6"
    },
    "1824": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1825": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1826": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1827": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1829": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1830": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "ADD",
      "path": "6"
    },
    "1831": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1832": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1833": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1834": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x84"
    },
    "1836": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1837": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "ADD",
      "path": "6"
    },
    "1838": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1839": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1840": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1841": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA4"
    },
    "1843": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1844": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "ADD",
      "path": "6"
    },
    "1845": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1846": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1847": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1848": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5620,
        5630
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1849": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC4"
    },
    "1851": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1852": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "ADD",
      "path": "6"
    },
    "1853": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1854": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1855": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1856": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5543
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1857": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5543
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1858": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5543
      ],
      "op": "AND",
      "path": "6"
    },
    "1859": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5543
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1860": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5543
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1487B9D2"
    },
    "1865": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5543
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1866": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE4"
    },
    "1868": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1869": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1870": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "ADD",
      "path": "6"
    },
    "1871": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1874": {
      "op": "SWAP3"
    },
    "1875": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1876": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1877": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1878": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1879": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1880": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "SUB",
      "path": "6"
    },
    "1881": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "ADD",
      "path": "6"
    },
    "1882": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1883": {
      "op": "DUP4"
    },
    "1884": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5543
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1885": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1886": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1887": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1888": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1889": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1890": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x76A"
    },
    "1893": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1894": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1896": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1897": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1898": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1899": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "POP",
      "path": "6"
    },
    "1900": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "GAS",
      "path": "6"
    },
    "1901": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "CALL",
      "path": "6"
    },
    "1902": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1903": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1904": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1905": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x77E"
    },
    "1908": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1909": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1910": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1912": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1913": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1914": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1915": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1917": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1918": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5517,
        5631
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1919": {
      "op": "POP"
    },
    "1920": {
      "op": "POP"
    },
    "1921": {
      "op": "POP"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1928": {
      "op": "SHL"
    },
    "1929": {
      "op": "SUB"
    },
    "1930": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 13
    },
    "1931": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1932": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "AND",
      "path": "6"
    },
    "1933": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1935": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1936": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1937": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1938": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5650
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1940": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1942": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1943": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1944": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1945": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1947": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1948": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1949": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1950": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5671
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1951": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5671
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1954": {
      "op": "NOT"
    },
    "1955": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5671
      ],
      "op": "AND",
      "path": "6"
    },
    "1956": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5667,
        5671
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1958": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5671
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1959": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5671
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1960": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5671
      ],
      "op": "OR",
      "path": "6"
    },
    "1961": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5671
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1962": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5671
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1963": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5671
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1964": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5689
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 14,
      "value": "0x4"
    },
    "1966": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1967": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1968": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1969": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1970": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "ADD",
      "path": "6"
    },
    "1971": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1972": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1973": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1974": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1975": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1976": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "2009": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2010": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2011": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "ADD",
      "path": "6"
    },
    "2012": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2013": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2020": {
      "op": "SHL"
    },
    "2021": {
      "op": "SUB"
    },
    "2022": {
      "op": "NOT"
    },
    "2023": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "AND",
      "path": "6"
    },
    "2024": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2025": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "OR",
      "path": "6"
    },
    "2026": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2027": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5681,
        5708
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2028": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 15
    },
    "2029": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2030": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "DUP11",
      "path": "6"
    },
    "2031": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2032": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2033": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2034": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2035": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "ADD",
      "path": "6"
    },
    "2036": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "DUP10",
      "path": "6"
    },
    "2037": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2038": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2039": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2040": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2041": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "ADD",
      "path": "6"
    },
    "2042": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2043": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2044": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2045": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2047": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2048": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "ADD",
      "path": "6"
    },
    "2049": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2050": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2051": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2052": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2053": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2054": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2055": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "DUP11",
      "path": "6"
    },
    "2056": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "AND",
      "path": "6"
    },
    "2057": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2058": {
      "op": "POP"
    },
    "2059": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2060": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5641,
        5664
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2061": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5736,
        5746
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2062": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5736,
        5746
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2063": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x3AEA98549091F8031EF0F0DC5B5FD5488909D726F5994B8D0CA261B32D926CA7"
    },
    "2096": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2097": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2098": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2099": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2100": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "SUB",
      "path": "6"
    },
    "2101": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2103": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "ADD",
      "path": "6"
    },
    "2104": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2105": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5723,
        5822
      ],
      "op": "LOG4",
      "path": "6"
    },
    "2106": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5836,
        5845
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "2107": {
      "branch": 31,
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5836,
        5849
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2108": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5832,
        5911
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x881"
    },
    "2111": {
      "branch": 31,
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5832,
        5911
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2112": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5872,
        5879
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 16,
      "value": "0x847"
    },
    "2115": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5872,
        5877
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x449"
    },
    "2118": {
      "fn": "DynPoolFactory.deployIBCO",
      "jump": "i",
      "offset": [
        5872,
        5879
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2119": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5872,
        5879
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2126": {
      "op": "SHL"
    },
    "2127": {
      "op": "SUB"
    },
    "2128": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5889
      ],
      "op": "AND",
      "path": "6"
    },
    "2129": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FC"
    },
    "2132": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5890,
        5899
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "2133": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2134": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2135": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2136": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "MUL",
      "path": "6"
    },
    "2137": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2138": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2140": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2141": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2143": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2145": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2146": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2147": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2148": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "SUB",
      "path": "6"
    },
    "2149": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2150": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2151": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2152": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2153": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "CALL",
      "path": "6"
    },
    "2154": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2155": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "POP",
      "path": "6"
    },
    "2156": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "POP",
      "path": "6"
    },
    "2157": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "POP",
      "path": "6"
    },
    "2158": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "POP",
      "path": "6"
    },
    "2159": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2160": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2161": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2162": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87F"
    },
    "2165": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2166": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2167": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2169": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2170": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2171": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2172": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2174": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2175": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2176": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5864,
        5900
      ],
      "op": "POP",
      "path": "6"
    },
    "2177": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        5832,
        5911
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2178": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "2179": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2180": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "POP",
      "path": "6"
    },
    "2181": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "POP",
      "path": "6"
    },
    "2182": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "POP",
      "path": "6"
    },
    "2183": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "POP",
      "path": "6"
    },
    "2184": {
      "fn": "DynPoolFactory.deployIBCO",
      "offset": [
        4833,
        5917
      ],
      "op": "POP",
      "path": "6"
    },
    "2185": {
      "fn": "DynPoolFactory.deployIBCO",
      "jump": "o",
      "offset": [
        4833,
        5917
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2186": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2187": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4379,
        4387
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 17,
      "value": "0x4"
    },
    "2189": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4379,
        4394
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2190": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        4305,
        4401
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2191": {
      "fn": "DynPoolFactory.numberOfProducts",
      "jump": "o",
      "offset": [
        4305,
        4401
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2192": {
      "offset": [
        3706,
        3731
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2193": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2195": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2202": {
      "op": "SHL"
    },
    "2203": {
      "op": "SUB"
    },
    "2204": {
      "offset": [
        3706,
        3731
      ],
      "op": "AND",
      "path": "6"
    },
    "2205": {
      "fn": "DynPoolFactory.numberOfProducts",
      "offset": [
        3706,
        3731
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2206": {
      "fn": "DynPoolFactory.numberOfProducts",
      "jump": "o",
      "offset": [
        3706,
        3731
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2207": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2208": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4743,
        4755
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2210": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A9"
    },
    "2213": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB80"
    },
    "2216": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2217": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2218": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2220": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2227": {
      "op": "SHL"
    },
    "2228": {
      "op": "SUB"
    },
    "2229": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2230": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2231": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "2232": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2233": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "2234": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "2235": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F9"
    },
    "2238": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2239": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2241": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2242": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2243": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2249": {
      "op": "SHL"
    },
    "2250": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2251": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2252": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2254": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2256": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2257": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2258": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2259": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2260": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2261": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2263": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2264": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2265": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2268": {
      "op": "DUP1"
    },
    "2269": {
      "op": "MLOAD"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2272": {
      "op": "PUSH2",
      "value": "0x1F3A"
    },
    "2275": {
      "op": "DUP4"
    },
    "2276": {
      "op": "CODECOPY"
    },
    "2277": {
      "op": "DUP2"
    },
    "2278": {
      "op": "MLOAD"
    },
    "2279": {
      "op": "SWAP2"
    },
    "2280": {
      "op": "MSTORE"
    },
    "2281": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2283": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2284": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2285": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2286": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2287": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2288": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2289": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2290": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2291": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "2292": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2294": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2295": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2296": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2297": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2298": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4781,
        4793
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 18
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2305": {
      "op": "SHL"
    },
    "2306": {
      "op": "SUB"
    },
    "2307": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4803
      ],
      "op": "AND",
      "path": "6"
    },
    "2308": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4803
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "2313": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4804,
        4811
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x910"
    },
    "2316": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4804,
        4809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x449"
    },
    "2319": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "jump": "i",
      "offset": [
        4804,
        4811
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2320": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4804,
        4811
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2321": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4813,
        4819
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2322": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2324": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2325": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2326": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2331": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "AND",
      "path": "6"
    },
    "2332": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "2334": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "SHL",
      "path": "6"
    },
    "2335": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2336": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2337": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2339": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "ADD",
      "path": "6"
    },
    "2340": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2341": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2348": {
      "op": "SHL"
    },
    "2349": {
      "op": "SUB"
    },
    "2350": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "AND",
      "path": "6"
    },
    "2351": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2352": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2353": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2355": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "ADD",
      "path": "6"
    },
    "2356": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2357": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2358": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2359": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2361": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "ADD",
      "path": "6"
    },
    "2362": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2363": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "POP",
      "path": "6"
    },
    "2364": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "POP",
      "path": "6"
    },
    "2365": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "POP",
      "path": "6"
    },
    "2366": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2368": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2370": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2371": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2372": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2373": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "SUB",
      "path": "6"
    },
    "2374": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2375": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2377": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2378": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2379": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2380": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2381": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2382": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2383": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x957"
    },
    "2386": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2387": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2389": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2390": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2391": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2392": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "POP",
      "path": "6"
    },
    "2393": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "GAS",
      "path": "6"
    },
    "2394": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "CALL",
      "path": "6"
    },
    "2395": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2396": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2397": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2398": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x96B"
    },
    "2401": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2402": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2403": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2405": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2406": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2407": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2408": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2410": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2411": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2412": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "POP",
      "path": "6"
    },
    "2413": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "POP",
      "path": "6"
    },
    "2414": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "POP",
      "path": "6"
    },
    "2415": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "POP",
      "path": "6"
    },
    "2416": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2418": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2419": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2420": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2422": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2423": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "LT",
      "path": "6"
    },
    "2424": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2425": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x981"
    },
    "2428": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2429": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2431": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2432": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2433": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2434": {
      "op": "POP"
    },
    "2435": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2436": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4774,
        4820
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2437": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "offset": [
        4648,
        4827
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2438": {
      "op": "POP"
    },
    "2439": {
      "op": "POP"
    },
    "2440": {
      "op": "POP"
    },
    "2441": {
      "fn": "DynPoolFactory.transferAnyERC20Token",
      "jump": "o",
      "offset": [
        4648,
        4827
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2442": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4407,
        4642
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2443": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x992"
    },
    "2446": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB80"
    },
    "2449": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2450": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2451": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2453": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2460": {
      "op": "SHL"
    },
    "2461": {
      "op": "SUB"
    },
    "2462": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2463": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2464": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "2465": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2466": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "2467": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "2468": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9E2"
    },
    "2471": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2472": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2474": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2475": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2476": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2482": {
      "op": "SHL"
    },
    "2483": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2484": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2485": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2487": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2489": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2490": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2491": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2492": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2493": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2494": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2496": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2497": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2498": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2501": {
      "op": "DUP1"
    },
    "2502": {
      "op": "MLOAD"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2505": {
      "op": "PUSH2",
      "value": "0x1F3A"
    },
    "2508": {
      "op": "DUP4"
    },
    "2509": {
      "op": "CODECOPY"
    },
    "2510": {
      "op": "DUP2"
    },
    "2511": {
      "op": "MLOAD"
    },
    "2512": {
      "op": "SWAP2"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2516": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2517": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2518": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2519": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2520": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2521": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2522": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2523": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2524": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "2525": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2527": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2528": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2529": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2530": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2531": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4491,
        4501
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 19,
      "value": "0x1"
    },
    "2533": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4491,
        4501
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2540": {
      "op": "SHL"
    },
    "2541": {
      "op": "SUB"
    },
    "2542": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4491,
        4501
      ],
      "op": "AND",
      "path": "6"
    },
    "2543": {
      "branch": 32,
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4491,
        4515
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2544": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA2A"
    },
    "2547": {
      "branch": 32,
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2548": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2550": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2551": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2557": {
      "op": "SHL"
    },
    "2558": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2559": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2560": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2562": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "ADD",
      "path": "6"
    },
    "2563": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2564": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2565": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2567": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "ADD",
      "path": "6"
    },
    "2568": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2569": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2570": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "SUB",
      "path": "6"
    },
    "2571": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2572": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2573": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "2575": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2576": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2577": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2579": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "ADD",
      "path": "6"
    },
    "2580": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2581": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EEE"
    },
    "2584": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "2586": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2587": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "2588": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2590": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "ADD",
      "path": "6"
    },
    "2591": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2592": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "POP",
      "path": "6"
    },
    "2593": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "POP",
      "path": "6"
    },
    "2594": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2596": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2597": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2598": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2599": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "SUB",
      "path": "6"
    },
    "2600": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2601": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2602": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4483,
        4556
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2603": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 20,
      "value": "0x40"
    },
    "2605": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2606": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2613": {
      "op": "SHL"
    },
    "2614": {
      "op": "SUB"
    },
    "2615": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2616": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "AND",
      "path": "6"
    },
    "2617": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2618": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2619": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2620": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2621": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xAC885CFCAC9D1450E80F787DBF9546001FB50414106435B10B1D27B448B8668"
    },
    "2654": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2655": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2656": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2657": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "SUB",
      "path": "6"
    },
    "2658": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2660": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "ADD",
      "path": "6"
    },
    "2661": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2662": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4571,
        4601
      ],
      "op": "LOG1",
      "path": "6"
    },
    "2663": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4611,
        4621
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 21,
      "value": "0x1"
    },
    "2665": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4611,
        4635
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2666": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4611,
        4635
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2673": {
      "op": "SHL"
    },
    "2674": {
      "op": "SUB"
    },
    "2675": {
      "op": "NOT"
    },
    "2676": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4611,
        4635
      ],
      "op": "AND",
      "path": "6"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2683": {
      "op": "SHL"
    },
    "2684": {
      "op": "SUB"
    },
    "2685": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4611,
        4635
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2686": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4611,
        4635
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2687": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4611,
        4635
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2688": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4611,
        4635
      ],
      "op": "AND",
      "path": "6"
    },
    "2689": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4611,
        4635
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2690": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4611,
        4635
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2691": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4611,
        4635
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2692": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4611,
        4635
      ],
      "op": "OR",
      "path": "6"
    },
    "2693": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4611,
        4635
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2694": {
      "fn": "DynPoolFactory.deprecateFactory",
      "offset": [
        4611,
        4635
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2695": {
      "fn": "DynPoolFactory.deprecateFactory",
      "jump": "o",
      "offset": [
        4407,
        4642
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2696": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2697": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA90"
    },
    "2700": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB80"
    },
    "2703": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2704": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2705": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2707": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2714": {
      "op": "SHL"
    },
    "2715": {
      "op": "SUB"
    },
    "2716": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2717": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2718": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "2719": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2720": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "2721": {
      "branch": 33,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "2722": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAE0"
    },
    "2725": {
      "branch": 33,
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2726": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2728": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2729": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2730": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2736": {
      "op": "SHL"
    },
    "2737": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2738": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2739": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2741": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2743": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2744": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2745": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2746": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2747": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2750": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2751": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2752": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2755": {
      "op": "DUP1"
    },
    "2756": {
      "op": "MLOAD"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2759": {
      "op": "PUSH2",
      "value": "0x1F3A"
    },
    "2762": {
      "op": "DUP4"
    },
    "2763": {
      "op": "CODECOPY"
    },
    "2764": {
      "op": "DUP2"
    },
    "2765": {
      "op": "MLOAD"
    },
    "2766": {
      "op": "SWAP2"
    },
    "2767": {
      "op": "MSTORE"
    },
    "2768": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2772": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2773": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2774": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2776": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2777": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2778": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "2779": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2781": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2782": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2783": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2784": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2791": {
      "op": "SHL"
    },
    "2792": {
      "op": "SUB"
    },
    "2793": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2088,
        2110
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 22
    },
    "2794": {
      "branch": 34,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2088,
        2110
      ],
      "op": "AND",
      "path": "1"
    },
    "2795": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB25"
    },
    "2798": {
      "branch": 34,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2799": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2801": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2808": {
      "op": "SHL"
    },
    "2809": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2810": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2811": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2813": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "2814": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2815": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2816": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2818": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "2819": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2820": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2821": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SUB",
      "path": "1"
    },
    "2822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2823": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2824": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x26"
    },
    "2826": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2830": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "2831": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2832": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EA2"
    },
    "2835": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x26"
    },
    "2837": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2838": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "2839": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2841": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "2842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2843": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "POP",
      "path": "1"
    },
    "2844": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "POP",
      "path": "1"
    },
    "2845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2847": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2848": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2849": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2850": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SUB",
      "path": "1"
    },
    "2851": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2852": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2853": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2854": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 23,
      "value": "0x0"
    },
    "2856": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2857": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2858": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2860": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2867": {
      "op": "SHL"
    },
    "2868": {
      "op": "SUB"
    },
    "2869": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2870": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2871": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "AND",
      "path": "1"
    },
    "2872": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2873": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2874": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "AND",
      "path": "1"
    },
    "2875": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2876": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2909": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2222
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0x0"
    },
    "2913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2914": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2921": {
      "op": "SHL"
    },
    "2922": {
      "op": "SUB"
    },
    "2923": {
      "op": "NOT"
    },
    "2924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "AND",
      "path": "1"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2931": {
      "op": "SHL"
    },
    "2932": {
      "op": "SUB"
    },
    "2933": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2934": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2935": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2936": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "AND",
      "path": "1"
    },
    "2937": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2938": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2939": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2940": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "OR",
      "path": "1"
    },
    "2941": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2942": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2943": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2944": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2945": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 25
    },
    "2946": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2947": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2948": {
      "op": "JUMPDEST"
    },
    "2949": {
      "op": "PUSH2",
      "value": "0x1310"
    },
    "2952": {
      "op": "DUP1"
    },
    "2953": {
      "op": "PUSH2",
      "value": "0xB92"
    },
    "2956": {
      "op": "DUP4"
    },
    "2957": {
      "op": "CODECOPY"
    },
    "2958": {
      "op": "ADD"
    },
    "2959": {
      "op": "SWAP1"
    },
    "2960": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "39fe60b0c466dc7fb9d7edb95308d26a3b7e9736",
  "source": "pragma solidity 0.6.12;\n\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract IBCOTemplate is Ownable {\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n\n    event Claimed(address indexed account, uint userShare, uint hegicAmount);\n    event Received(address indexed account, uint amount);\n\n    uint256 public START;\n    uint256 public END;\n    uint256 public TOTAL_DISTRIBUTE_AMOUNT;\n    uint256 public MINIMAL_PROVIDE_AMOUNT;\n    uint256 public totalProvided = 0;\n    bool private initialised;\n    mapping(address => uint256) public provided;\n    address[] public providers;\n    IERC20 public token;\n\n    function initIBCO(\n        address _funder,\n        IERC20 _token,\n        uint256 _totalSupply,\n        uint256 _startDate,\n        uint256 _endDate,\n        uint256 _minimalProvide,\n        address _newOwner)\n    external {\n        require(!initialised, \"contract already initialised\");\n        require(_endDate > _startDate, \"end date cannot be before start date\");\n        require(_minimalProvide > 0, \"the minimum raise amount must be greater than 0\");\n\n        token = _token;\n        TOTAL_DISTRIBUTE_AMOUNT = _totalSupply;\n        START = _startDate;\n        END = _endDate;\n        MINIMAL_PROVIDE_AMOUNT = _minimalProvide;\n        initialised = true;\n        transferOwnership(_newOwner);\n        token.safeTransferFrom(_funder, address(this), _totalSupply);}\n\n\n    receive() external payable {\n        require(START <= block.timestamp, \"The offering has not started yet\");\n        require(block.timestamp <= END, \"The offering has already ended\");\n        totalProvided += msg.value;\n        provided[msg.sender] += msg.value;\n        providers.push(msg.sender);\n        emit Received(msg.sender, msg.value);\n    }\n\n    function numberOfProviders() public view returns (uint256){\n        return providers.length;\n    }\n\n    function claim() external {\n        require(block.timestamp > END);\n        require(provided[msg.sender] > 0);\n\n        uint256 userShare = provided[msg.sender];\n        provided[msg.sender] = 0;\n\n        if(totalProvided >= MINIMAL_PROVIDE_AMOUNT) {\n            uint256 tokenAmount = TOTAL_DISTRIBUTE_AMOUNT\n                .mul(userShare)\n                .div(totalProvided);\n            token.safeTransfer(msg.sender, tokenAmount);\n            emit Claimed(msg.sender, userShare, tokenAmount);\n        } else {\n            msg.sender.transfer(userShare);\n            emit Claimed(msg.sender, userShare, 0);\n        }\n    }\n\n    function withdrawProvidedETH() external onlyOwner {\n        require(END < block.timestamp, \"The offering must be completed\");\n        require(\n            totalProvided >= MINIMAL_PROVIDE_AMOUNT,\n            \"The required amount has not been provided!\"\n        );\n        payable(owner()).transfer(address(this).balance);\n    }\n\n    function withdrawToken() external onlyOwner {\n        require(END < block.timestamp, \"The offering must be completed\");\n        require(\n            totalProvided < MINIMAL_PROVIDE_AMOUNT,\n            \"The required amount has been provided!\"\n        );\n        token.safeTransfer(owner(), token.balanceOf(address(this)));\n    }\n\n    function withdrawUnclaimedToken() external onlyOwner {\n        require(END + 30 days < block.timestamp, \"Withdrawal unavailable yet\");\n        token.safeTransfer(owner(), token.balanceOf(address(this)));\n    }\n}\n\n//inspired by BokkyPooBahsFixedSupplyTokenFactory.sol\n\ncontract DynPoolFactory is Ownable{\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    address public newAddress;\n    uint256 public minimumFee = 1e17;\n    mapping(address => bool) public isProduct;\n    address[] public products;\n\n    event IBCODeployed(address indexed owner, address indexed addr, IERC20 indexed token, uint256 tokenSupply, uint256 startDate, uint256 endDate, uint256 minimalProvide);\n    event MinimumFeeUpdated(uint256 oldFee, uint256 newFee);\n    event FactoryDeprecated(address _newAddress);\n\n    function setMinimumFee(uint256 _minimumFee) external onlyOwner {\n        emit MinimumFeeUpdated(minimumFee, _minimumFee);\n        minimumFee = _minimumFee;\n    }\n\n    function numberOfProducts() public view returns (uint256){\n        return products.length;\n    }\n\n    function deprecateFactory(address _newAddress) external onlyOwner {\n        require(newAddress == address(0), \"new factory address is already owned\");\n        emit FactoryDeprecated(_newAddress);\n        newAddress = _newAddress;\n    }\n\n    function transferAnyERC20Token(address tokenAddress, uint256 tokens) public onlyOwner returns (bool success) {\n        return IERC20(tokenAddress).transfer(owner(), tokens);\n    }\n\n    function deployIBCO(\n        IERC20 _token,\n        uint256 _tokenSupply,\n        uint256 _startDate,\n        uint256 _endDate,\n        uint256 _minimalProvide) public payable returns (IBCOTemplate ICO)\n    {\n        require(msg.value >= minimumFee, \"Fee to launch contract is insufficient\");\n        require(_tokenSupply > 0, \"No tokens submitted\");\n        require(_endDate > _startDate, \"End date cannot be before the start date\");\n        ICO = new IBCOTemplate();\n        require(_token.transferFrom(msg.sender, address(this), _tokenSupply), \"token transfer to factory failed\");\n        require(_token.approve(address(ICO), _tokenSupply), \"token approval unsuccessful\");\n        IBCOTemplate(ICO).initIBCO(address(this), _token, _tokenSupply, _startDate, _endDate, _minimalProvide, msg.sender);\n        isProduct[address(ICO)] = true;\n        products.push(address(ICO));\n        emit IBCODeployed(msg.sender, address(ICO), _token, _tokenSupply, _startDate, _endDate, _minimalProvide);\n        if (msg.value > 0){\n            payable(owner()).transfer(msg.value);\n        }\n    }\n\n    receive () external payable {\n        revert();\n    }\n}",
  "sourceMap": "3601:2377:6:-:0;;;3765:4;3737:32;;3601:2377;;;;;;;;;-1:-1:-1;882:17:1;902:12;:10;:12::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:1;-1:-1:-1;;;;;924:18:1;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:1;957:43;;924:6;;957:43;848:159;3601:2377:6;;598:104:0;685:10;598:104;:::o;3601:2377:6:-;;;;;;;",
  "sourcePath": "contracts/DynPoolFactory.sol",
  "type": "contract"
}