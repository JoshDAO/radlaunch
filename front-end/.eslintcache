[{"/home/josh/Projects/LBL/ico-manager/front-end/src/developers/DeveloperIndex.js":"1"},{"size":15300,"mtime":1611447593269,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1i0cwq4","/home/josh/Projects/LBL/ico-manager/front-end/src/developers/DeveloperIndex.js",["6","7","8","9","10","11","12","13"],{"ruleId":"14","severity":1,"message":"15","line":3,"column":8,"nodeType":"16","messageId":"17","endLine":3,"endColumn":12},{"ruleId":"14","severity":1,"message":"18","line":11,"column":8,"nodeType":"16","messageId":"17","endLine":11,"endColumn":13},{"ruleId":"14","severity":1,"message":"19","line":213,"column":10,"nodeType":"16","messageId":"17","endLine":213,"endColumn":17},{"ruleId":"14","severity":1,"message":"20","line":214,"column":10,"nodeType":"16","messageId":"17","endLine":214,"endColumn":23},{"ruleId":"14","severity":1,"message":"21","line":214,"column":25,"nodeType":"16","messageId":"17","endLine":214,"endColumn":41},{"ruleId":"14","severity":1,"message":"22","line":352,"column":18,"nodeType":"16","messageId":"17","endLine":352,"endColumn":40},{"ruleId":"23","severity":1,"message":"24","line":359,"column":13,"nodeType":"25","endLine":395,"endColumn":4},{"ruleId":"23","severity":1,"message":"26","line":395,"column":6,"nodeType":"27","endLine":395,"endColumn":24,"suggestions":"28"},"no-unused-vars","'Web3' is defined but never used.","Identifier","unusedVar","'Keanu' is defined but never used.","'factory' is assigned a value but never used.","'tokenContract' is assigned a value but never used.","'setTokenContract' is assigned a value but never used.","'withdrawUnclaimedToken' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getExtraICOdata', 'loadInitialFactory', and 'loadInitialTemplate'. Either include them or remove the dependency array.","ArrayExpression",["29"],{"desc":"30","fix":"31"},"Update the dependencies array to be: [myWeb3, accounts, loadInitialFactory, loadInitialTemplate, getExtraICOdata]",{"range":"32","text":"33"},[10110,10128],"[myWeb3, accounts, loadInitialFactory, loadInitialTemplate, getExtraICOdata]"]