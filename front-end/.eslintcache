[{"/home/josh/Projects/LBL/ico-manager/front-end/src/App.js":"1","/home/josh/Projects/LBL/ico-manager/front-end/src/NavBar.js":"2","/home/josh/Projects/LBL/ico-manager/front-end/src/index.js":"3","/home/josh/Projects/LBL/ico-manager/front-end/src/Landing.js":"4","/home/josh/Projects/LBL/ico-manager/front-end/src/developers/DeveloperIndex.js":"5","/home/josh/Projects/LBL/ico-manager/front-end/src/developers/cards/SetUpIco.js":"6","/home/josh/Projects/LBL/ico-manager/front-end/src/developers/SelectIco.js":"7","/home/josh/Projects/LBL/ico-manager/front-end/src/developers/IbcoSetupForm.js":"8"},{"size":938,"mtime":1610213138278,"results":"9","hashOfConfig":"10"},{"size":1437,"mtime":1610211752762,"results":"11","hashOfConfig":"10"},{"size":215,"mtime":1610052466421,"results":"12","hashOfConfig":"10"},{"size":1446,"mtime":1610280012213,"results":"13","hashOfConfig":"10"},{"size":384,"mtime":1610191418005,"results":"14","hashOfConfig":"10"},{"size":1032,"mtime":1610193112531,"results":"15","hashOfConfig":"10"},{"size":1119,"mtime":1610207041901,"results":"16","hashOfConfig":"10"},{"size":1769,"mtime":1610229147524,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i0cwq4",{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/home/josh/Projects/LBL/ico-manager/front-end/src/App.js",[],"/home/josh/Projects/LBL/ico-manager/front-end/src/NavBar.js",["36","37","38","39","40"],"/home/josh/Projects/LBL/ico-manager/front-end/src/index.js",[],"/home/josh/Projects/LBL/ico-manager/front-end/src/Landing.js",["41"],"/home/josh/Projects/LBL/ico-manager/front-end/src/developers/DeveloperIndex.js",["42"],"/home/josh/Projects/LBL/ico-manager/front-end/src/developers/cards/SetUpIco.js",["43"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport ICOimg from '../../assets/ICO.jpg'\n\nconst CardDiv = styled.div`\n  box-shadow: 5px 10px 18px #888888;\n  width: 17rem;\n  height: 26rem;\n  padding: 1rem;\n`\n\nconst H3 = styled.h3`\n  font-weight: 500;\n  font-size: 1.3rem;\n  color: #577083;\n  letter-spacing: 0.08em;\n  text-align: left;\n`\nconst CardText = styled.div`\n  text-align: left;\n  font-weight: 300;\n  color: #577083;\n`\nconst SetUpButton = styled.button`\n  background-color: hsl(343, 94%, 35%);\n  color: white;\n  padding: 1rem;\n  border: none;\n  margin: 4rem 0 0 9rem;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n  font-size: 1rem;\n`\n\nconst SetUpIcoCard = (props) => {\n  return (\n    <CardDiv>\n      <img src={ICOimg} width='100%' />\n      <H3>SET UP AN ICO</H3>\n      <CardText>List a token for investment.</CardText>\n      <Link to={'/SetUpIco'}>\n        <SetUpButton>Set Up</SetUpButton>\n      </Link>\n    </CardDiv>\n  )\n}\n\nexport default SetUpIcoCard\n","/home/josh/Projects/LBL/ico-manager/front-end/src/developers/SelectIco.js",["44"],"/home/josh/Projects/LBL/ico-manager/front-end/src/developers/IbcoSetupForm.js",["45","46","47","48","49","50","51","52"],"import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Box, Form, Input, Select, Field, Button, Text, Checkbox, Radio } from 'rimble-ui'\n\nconst Label = styled.label`\n  padding: 0.9rem;\n`\n\nconst IbcoSetupForm = (props) => {\n  const [validated, setValidated] = useState(false)\n  const [tokenNameInput, setTokenNameInput] = useState('')\n  const [totalSupplyInput, setTotalSupplyInput] = useState('')\n\n  const validateForm = () => {\n    // Perform advanced validation here\n    if (1 === 1) {\n      setValidated(true)\n    } else {\n      setValidated(false)\n    }\n  }\n\n  const handleTokenNameInput = (e) => {\n    setTokenNameInput(e.target.value)\n    validateInput(e)\n  }\n  const handleTotalSupplyInput = (e) => {\n    setTotalSupplyInput(e.target.value)\n    validateInput(e)\n  }\n\n  const validateInput = (e) => {\n    e.target.parentNode.classList.add('was-validated')\n  }\n\n  useEffect(() => {\n    validateForm()\n  })\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log('Submitted valid form')\n  }\n\n  return (\n    <Form\n      style={{ backgroundColor: 'rgba(113, 101, 215, 0.2)' }}\n      onSubmit={handleSubmit}\n      validated={validated}\n    >\n      <Label htmlFor='tokenName'>Token name:</Label>\n      <Input\n        id='tokenName'\n        type='text'\n        required={true}\n        onChange={handleTokenNameInput}\n        value={tokenNameInput}\n        placeholder='e.g. My hodl wallet'\n      />\n      <Label htmlFor='supply'>Total supply to list:</Label>\n      <Input\n        id='supply'\n        type='text'\n        required={true}\n        onChange={handleTotalSupplyInput}\n        value={totalSupplyInput}\n        placeholder='e.g. My hodl wallet'\n      />\n    </Form>\n  )\n}\n\nexport default IbcoSetupForm\n",{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"57","line":27,"column":7,"nodeType":"55","messageId":"56","endLine":27,"endColumn":19},{"ruleId":"58","severity":1,"message":"59","line":40,"column":7,"nodeType":"60","endLine":40,"endColumn":39},{"ruleId":"61","severity":1,"message":"62","line":43,"column":11,"nodeType":"60","endLine":43,"endColumn":87},{"ruleId":"61","severity":1,"message":"62","line":48,"column":11,"nodeType":"60","endLine":48,"endColumn":87},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"63","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":39,"column":7,"nodeType":"60","endLine":39,"endColumn":40},{"ruleId":"58","severity":1,"message":"59","line":38,"column":15,"nodeType":"60","endLine":38,"endColumn":49},{"ruleId":"53","severity":1,"message":"64","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":13},{"ruleId":"53","severity":1,"message":"65","line":3,"column":28,"nodeType":"55","messageId":"56","endLine":3,"endColumn":34},{"ruleId":"53","severity":1,"message":"66","line":3,"column":36,"nodeType":"55","messageId":"56","endLine":3,"endColumn":41},{"ruleId":"53","severity":1,"message":"67","line":3,"column":43,"nodeType":"55","messageId":"56","endLine":3,"endColumn":49},{"ruleId":"53","severity":1,"message":"68","line":3,"column":51,"nodeType":"55","messageId":"56","endLine":3,"endColumn":55},{"ruleId":"53","severity":1,"message":"69","line":3,"column":57,"nodeType":"55","messageId":"56","endLine":3,"endColumn":65},{"ruleId":"53","severity":1,"message":"70","line":3,"column":67,"nodeType":"55","messageId":"56","endLine":3,"endColumn":72},{"ruleId":"71","severity":1,"message":"72","line":16,"column":9,"nodeType":"73","messageId":"74","endLine":16,"endColumn":16},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'WalletButton' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'icoImage' is defined but never used.","'Box' is defined but never used.","'Select' is defined but never used.","'Field' is defined but never used.","'Button' is defined but never used.","'Text' is defined but never used.","'Checkbox' is defined but never used.","'Radio' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf"]