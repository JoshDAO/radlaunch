[{"/home/josh/Projects/LBL/ico-manager/front-end/src/developers/DeveloperIndex.js":"1","/home/josh/Projects/LBL/ico-manager/front-end/src/developers/SelectIco.js":"2","/home/josh/Projects/LBL/ico-manager/front-end/src/utils/apiCalls.js":"3","/home/josh/Projects/LBL/ico-manager/front-end/src/App.js":"4","/home/josh/Projects/LBL/ico-manager/front-end/src/Wallet_model.js":"5","/home/josh/Projects/LBL/ico-manager/front-end/src/developers/IbcoSetupForm.js":"6","/home/josh/Projects/LBL/ico-manager/front-end/src/investors/Index.js":"7","/home/josh/Projects/LBL/ico-manager/front-end/src/investors/icoTable.js":"8","/home/josh/Projects/LBL/ico-manager/front-end/src/index.js":"9"},{"size":18802,"mtime":1611607346976,"results":"10","hashOfConfig":"11"},{"size":1119,"mtime":1610207041901,"results":"12","hashOfConfig":"11"},{"size":2199,"mtime":1611501997122,"results":"13","hashOfConfig":"11"},{"size":2222,"mtime":1611607978713,"results":"14","hashOfConfig":"11"},{"size":1642,"mtime":1611262493175,"results":"15","hashOfConfig":"11"},{"size":13640,"mtime":1611433662585,"results":"16","hashOfConfig":"11"},{"size":1058,"mtime":1611674791492,"results":"17","hashOfConfig":"11"},{"size":6494,"mtime":1611677740802,"results":"18","hashOfConfig":"11"},{"size":215,"mtime":1610052466421,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1i0cwq4",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/josh/Projects/LBL/ico-manager/front-end/src/developers/DeveloperIndex.js",["41","42","43","44","45","46","47","48","49","50"],"/home/josh/Projects/LBL/ico-manager/front-end/src/developers/SelectIco.js",["51"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport IbcoImg from '../assets/ibcoImg.png'\n\nconst IcoTypeCard = styled.div`\n  width: 17rem;\n  height: 25rem;\n  //border: 1px solid black;\n  margin: 2rem;\n`\n\nconst H2 = styled.h2`\n  letter-spacing: 3px;\n  font-weight: 300;\n  text-align: left;\n  font-size: 3rem;\n`\n\nconst H3 = styled.h3`\n  font-weight: 500;\n  font-size: 1.5rem;\n  color: #577083;\n  letter-spacing: 0.08em;\n  text-decoration: none;\n`\n\nconst SelectICO = (props) => {\n  return (\n    <>\n      <H2>Select your desired ICO style</H2>\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\n        <Link to={'/ibcoSetup'} style={{ textDecoration: 'none' }}>\n          <IcoTypeCard>\n            <div\n              style={{ height: '60%', overflow: 'hidden', display: 'flex', alignItems: 'center' }}\n            >\n              <img src={IbcoImg} width='110%' />\n            </div>\n            <H3>IBCO</H3>\n          </IcoTypeCard>\n        </Link>\n        <IcoTypeCard />\n        <IcoTypeCard />\n      </div>\n    </>\n  )\n}\n\nexport default SelectICO\n","/home/josh/Projects/LBL/ico-manager/front-end/src/utils/apiCalls.js",[],"/home/josh/Projects/LBL/ico-manager/front-end/src/App.js",["52","53"],"import React, { useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Web3 from 'web3'\n\nimport NavBar from './NavBar'\nimport Landing from './Landing'\nimport DeveloperIndex from './developers/DeveloperIndex'\nimport InvestorIndex from './investors/Index'\nimport SelectICO from './developers/SelectIco'\nimport IbcoSetupForm from './developers/IbcoSetupForm'\n\nfunction App() {\n  const [myWeb3, setMyWeb3] = useState()\n  const [accounts, setAccounts] = useState()\n  const [chainId, setChainId] = useState()\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        margin: 'auto',\n        height: window.innerHeight,\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n      className='App'\n    >\n      <Router>\n        <Switch>\n          <Route exact path='/developer'>\n            <DeveloperIndex\n              myWeb3={myWeb3}\n              setMyWeb3={setMyWeb3}\n              accounts={accounts}\n              setAccounts={setAccounts}\n              chainId={chainId}\n              setChainId={setChainId}\n            />\n          </Route>\n          <Route exact path='/'>\n            <Landing\n              myWeb3={myWeb3}\n              setMyWeb3={setMyWeb3}\n              accounts={accounts}\n              setAccounts={setAccounts}\n              chainId={chainId}\n              setChainId={setChainId}\n            />\n          </Route>\n          <Route exact path='/SetUpIco'>\n            <SelectICO />\n          </Route>\n          <Route exact path='/IbcoSetup'>\n            <IbcoSetupForm\n              myWeb3={myWeb3}\n              setMyWeb3={setMyWeb3}\n              accounts={accounts}\n              setAccounts={setAccounts}\n              chainId={chainId}\n              setChainId={setChainId}\n            />\n          </Route>\n          <Route exact path='/investor'>\n            <InvestorIndex\n              myWeb3={myWeb3}\n              setMyWeb3={setMyWeb3}\n              accounts={accounts}\n              setAccounts={setAccounts}\n              chainId={chainId}\n              setChainId={setChainId}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","/home/josh/Projects/LBL/ico-manager/front-end/src/Wallet_model.js",[],"/home/josh/Projects/LBL/ico-manager/front-end/src/developers/IbcoSetupForm.js",["54","55","56","57"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Form, Input, Field, Button, Text } from 'rimble-ui'\nimport NavBar from '../NavBar'\nimport Web3 from 'web3'\nimport map from '../artifacts/deployments/map.json'\nimport template from '../artifacts/contracts/IBCOTemplate.json'\nimport { icoSubmit } from '../utils/apiCalls'\n\nconst TypeButton = styled.button`\n  font-family: 'Questrial', sans-serif;\n  font-weight: 400;\n  font-size: 1.2rem;\n  text-align: left;\n  background: #e6ddff;\n  border: 2px solid #4e3fce;\n  box-sizing: border-box;\n  border-radius: 2rem;\n  width: 15rem;\n  height: 5rem;\n  cursor: pointer;\n  margin: 1rem 2rem 1rem 0;\n  padding: 1rem;\n`\n\nconst IbcoSetupForm = ({ myWeb3, setMyWeb3, accounts, setAccounts, chainId, setChainId }) => {\n  const [submitted, setSubmitted] = useState(false)\n  const [validated, setValidated] = useState(false)\n  const [startDateInFuture, setStartDateInFuture] = useState(true)\n  const [endAfterStart, setEndAfterStart] = useState(true)\n  const [tokenAddress, setTokenAddress] = useState('')\n  const [tokenSupply, setTokenSupply] = useState('')\n  const [minimumThreshold, setMinimumThreshold] = useState('')\n  const [startDate, setStartDate] = useState('')\n  const [endDate, setEndDate] = useState('')\n  const [projectDescription, setProjectDescription] = useState('')\n\n  const validateForm = () => {\n    if (Date.now() > Date.parse(startDate)) {\n      setStartDateInFuture(false)\n      setValidated(false)\n    } else {\n      setStartDateInFuture(true)\n    }\n    if (Date.parse(startDate) >= Date.parse(endDate)) {\n      setEndAfterStart(false)\n      setValidated(false)\n    } else {\n      setEndAfterStart(true)\n    }\n    if (Date.parse(startDate) < Date.parse(endDate) && Date.now() <= Date.parse(startDate)) {\n      setValidated(true)\n    }\n  }\n\n  const handleTokenAddressInput = (e) => {\n    setTokenAddress(e.target.value)\n    validateInput(e)\n  }\n  const handleTokenSupplyInput = async (e) => {\n    await setTokenSupply(parseInt(e.target.value))\n    if (Number.isInteger(tokenSupply)) {\n      validateInput(e)\n    }\n  }\n  const handleMinimumThresholdInput = async (e) => {\n    await setMinimumThreshold(parseInt(e.target.value))\n    if (Number.isInteger(minimumThreshold)) {\n      validateInput(e)\n    }\n  }\n\n  const handleStartDateInput = (e) => {\n    setStartDate(e.target.value)\n    validateInput(e)\n  }\n  const handleEndDateInput = (e) => {\n    setEndDate(e.target.value)\n    validateInput(e)\n  }\n  const handleProjectDescriptionInput = (e) => {\n    setProjectDescription(e.target.value)\n    validateInput(e)\n  }\n\n  const validateInput = (e) => {\n    e.target.parentNode.classList.add('was-validated')\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setSubmitted(true)\n    validateForm()\n    const factory = await loadInitialFactory()\n    const token = await loadInitialToken(tokenAddress)\n    await deployICO(factory, token)\n    await icoSubmit(accounts[0], projectDescription, tokenAddress)\n  }\n\n  // blockchain code /////////////////////////////////////////////////////////////////////////////////////\n\n  const [factory, setFactory] = useState()\n  const [tokenContract, setTokenContract] = useState()\n\n  async function loadInitialToken(addr) {\n    // if (chainId <= 42){\n    //     return\n    // }\n\n    const token = await loadTemplate('42', 'ERCToken', addr)\n    console.log('token:  ,', token)\n    setTokenContract(token)\n    return token\n  }\n\n  async function loadInitialFactory() {\n    // if (chainId <= 42){\n    //     return\n    // }\n\n    const dyn = await loadContract('42', 'DynPoolFactory')\n    setFactory(dyn)\n    return dyn\n  }\n\n  async function loadTemplate(chain, contractName, addr) {\n    // Load a deployed contract instance into a web3 contract object\n    // const {web3} = this.state\n\n    // Get the address of the most recent deployment from the deployment map\n    let address\n    try {\n      address = map[chain][contractName][0]\n    } catch (e) {\n      console.log(`Couldn't find any deployed contract \"${contractName}\" on the chain \"${chain}\".`)\n      return undefined\n    }\n\n    // Load the artifact with the specified address\n    let contractArtifact\n    try {\n      contractArtifact = await import(`../artifacts/deployments/${chain}/${address}.json`)\n    } catch (e) {\n      console.log(\n        `Failed to load contract artifact \"../artifacts/deployments/${chain}/${address}.json\"`,\n      )\n      return undefined\n    }\n    console.log(contractArtifact)\n\n    return new myWeb3.eth.Contract(contractArtifact.abi, addr)\n  }\n\n  async function loadContract(chain, contractName) {\n    // Load a deployed contract instance into a web3 contract object\n    // const {web3} = this.state\n\n    // Get the address of the most recent deployment from the deployment map\n    let address\n    try {\n      address = map[chain][contractName][0]\n    } catch (e) {\n      console.log(`Couldn't find any deployed contract \"${contractName}\" on the chain \"${chain}\".`)\n      return undefined\n    }\n\n    // Load the artifact with the specified address\n    let contractArtifact\n    try {\n      contractArtifact = await import(`../artifacts/deployments/${chain}/${address}.json`)\n    } catch (e) {\n      console.log(\n        `Failed to load contract artifact \"../artifacts/deployments/${chain}/${address}.json\"`,\n      )\n      return undefined\n    }\n    console.log(contractArtifact)\n\n    return new myWeb3.eth.Contract(contractArtifact.abi, address)\n  }\n\n  async function deployICO(factory, tokenContract) {\n    // const value = parseInt(dynInput)\n    // if (isNaN(value)) {\n    //     alert(\"invalid value\")\n    //     return\n    // }\n    let supply = myWeb3.utils.toWei(tokenSupply.toString(), 'ether')\n    let minimalProv = myWeb3.utils.toWei(minimumThreshold.toString(), 'ether')\n    let value = myWeb3.utils.toWei('0.1', 'ether')\n    await tokenContract.methods\n      .increaseAllowance(factory.options.address, supply)\n      .send({ from: accounts[0] })\n    console.log(startDate)\n    await factory.methods\n      .deployIBCO(\n        tokenAddress,\n        supply,\n        Date.parse(startDate) / 1000,\n        Date.parse(endDate) / 1000,\n        minimalProv,\n      )\n      .send({ from: accounts[0], value: value })\n      .on('receipt', async () => {}) // see what this returns and edit\n  }\n\n  return (\n    <div style={{ paddingBottom: '2rem' }}>\n      <NavBar\n        titleText={'Type'}\n        myWeb3={myWeb3}\n        setMyWeb3={setMyWeb3}\n        accounts={accounts}\n        setAccounts={setAccounts}\n        chainId={chainId}\n        setChainId={setChainId}\n      />\n      <div\n        style={{ width: '70%', margin: '0 auto', justifyContent: 'flex-start', display: 'flex' }}\n      >\n        <TypeButton>Dynamic Swap Pool / IBCO Public</TypeButton>\n        <TypeButton style={{ backgroundColor: 'white' }}>\n          Dynamic Swap Pool / IBCO Private Whitelist\n        </TypeButton>\n      </div>\n      <Form\n        style={{\n          border: '1px solid #4E3FCE',\n          borderRadius: '2rem',\n          display: 'flex',\n          flexDirection: 'column',\n          fontFamily: \"'Questrial', sans-serif\",\n          fontWeight: 400,\n          fontSize: '1rem',\n          width: '70%',\n          margin: '0 auto',\n          padding: '2rem 0',\n        }}\n        onSubmit={handleSubmit}\n        validated={validated}\n      >\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              width: '50%',\n            }}\n          >\n            <Field\n              style={{\n                marginLeft: '7rem',\n                width: '70%',\n              }}\n            >\n              <label for='address-input' style={{ paddingBottom: '0.5rem' }}>\n                Token Address - ERC20 Compatible token to list{' '}\n              </label>\n              <Input\n                id='address-input'\n                type='text'\n                required={true}\n                onChange={handleTokenAddressInput}\n                value={tokenAddress}\n                style={{ width: '100%' }}\n              />\n            </Field>\n            <Field\n              style={{\n                marginLeft: '7rem',\n                width: '70%',\n              }}\n            >\n              <label for='token-input' style={{ paddingBottom: '0.5rem' }}>\n                Token supply - number of tokens to be listed for sale\n              </label>\n              <Input\n                id='token-input'\n                type='text'\n                required={true}\n                onChange={handleTokenSupplyInput}\n                value={tokenSupply || ''}\n                style={{ width: '100%' }}\n              />\n            </Field>\n            <Field\n              style={{\n                marginLeft: '7rem',\n                width: '70%',\n                fontFamily: \"'Questrial', sans-serif\",\n                fontWeight: 400,\n              }}\n            >\n              <label for='start-date' style={{ paddingBottom: '0.5rem' }}>\n                Start date:\n              </label>\n              <Input\n                id='start-date'\n                type='datetime-local'\n                required\n                onChange={handleStartDateInput}\n                value={startDate}\n                style={{ width: '100%' }}\n              />\n            </Field>\n            {submitted && !startDateInFuture ? (\n              <Text style={{ color: 'red', fontSize: '1rem' }}>\n                Your start date is in the past!\n              </Text>\n            ) : null}\n            <Field style={{ marginLeft: '7rem', width: '70%' }}>\n              <label for='end-date' style={{ paddingBottom: '0.5rem' }}>\n                End date:\n              </label>\n              <Input\n                id='end-date'\n                type='datetime-local'\n                required\n                onChange={handleEndDateInput}\n                value={endDate}\n                style={{ width: '100%' }}\n              />\n            </Field>\n            {submitted && !endAfterStart ? (\n              <Text style={{ color: 'red', fontSize: '1rem' }}>\n                Your end date is before your start date!\n              </Text>\n            ) : null}\n            <Field style={{ marginLeft: '7rem', width: '70%' }}>\n              <label for='min-threshold' style={{ paddingBottom: '0.5rem', textAlign: 'left' }}>\n                Minimum Investment Threshold - tokens will only be distributed if your project\n                raises more than this amount in ETH\n              </label>\n              <Input\n                id='min-threshold'\n                type='text'\n                required\n                onChange={handleMinimumThresholdInput}\n                value={minimumThreshold || ''}\n                style={{ width: '100%' }}\n              />\n            </Field>\n          </div>\n\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              width: '50%',\n            }}\n          >\n            <Text style={{ textAlign: 'left', padding: '1rem 3rem 2rem 3rem', fontSize: '1rem' }}>\n              How does this launch type work? This launch type deploys a dynamic swap pool contract.\n              In this kind of deployment the number of tokens to be sold are fixed, investors\n              participate by committing ETH, thus increasing the price of 1 token in a linear\n              fashion. At the end date the settlement price will be set, this price will be the same\n              for all investors, regardless of when they invested in the project. This discourages\n              any frontrunning and ensures that all investors are equal before a DEX launch for\n              example. This launch type requires a minimum investment threshold, if your pool\n              doesn’t reach that size then all investors are returned their investment and your\n              tokens are returned to you.\n            </Text>\n            <Field\n              style={{\n                paddingLeft: '3rem',\n                width: '90%',\n                fontFamily: \"'Questrial', sans-serif\",\n                fontWeight: 400,\n                fontSize: '1rem',\n              }}\n            >\n              <label\n                for='project-description'\n                style={{ paddingBottom: '0.5rem', textAlign: 'left' }}\n              >\n                Project Description - describe your project, provide links, token description etc.\n                This can be updated on your My Launch page.\n              </label>\n              <textarea\n                id='project-description'\n                rows={4}\n                cols='20'\n                color='text'\n                class='Box__StyledBox-ha1bw0-0 Input__StyledInput-vwozih-0 hllauP erlOXA sc-bwzfXH sc-cXWtzU iofgdJ'\n                onChange={handleProjectDescriptionInput}\n                value={projectDescription}\n                style={{\n                  height: '11rem',\n                  width: '100%',\n                  fontFamily: \"'Questrial', sans-serif\",\n                  fontSize: '1rem',\n                }}\n              ></textarea>\n            </Field>\n          </div>\n        </div>\n        <Button\n          type='submit'\n          width='70%'\n          style={{\n            margin: 'auto',\n            marginTop: '2rem',\n            fontFamily: \"'Questrial', sans-serif\",\n            fontWeight: 400,\n            fontSize: '1rem',\n          }}\n        >\n          Review and Submit ICO for listing\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default IbcoSetupForm\n","/home/josh/Projects/LBL/ico-manager/front-end/src/investors/Index.js",["58","59","60"],"/home/josh/Projects/LBL/ico-manager/front-end/src/investors/icoTable.js",["61","62","63","64","65","66","67","68"],"/home/josh/Projects/LBL/ico-manager/front-end/src/index.js",[],{"ruleId":"69","severity":1,"message":"70","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":12},{"ruleId":"69","severity":1,"message":"73","line":12,"column":8,"nodeType":"71","messageId":"72","endLine":12,"endColumn":13},{"ruleId":"69","severity":1,"message":"74","line":214,"column":10,"nodeType":"71","messageId":"72","endLine":214,"endColumn":17},{"ruleId":"69","severity":1,"message":"75","line":215,"column":10,"nodeType":"71","messageId":"72","endLine":215,"endColumn":23},{"ruleId":"69","severity":1,"message":"76","line":215,"column":25,"nodeType":"71","messageId":"72","endLine":215,"endColumn":41},{"ruleId":"69","severity":1,"message":"77","line":353,"column":18,"nodeType":"71","messageId":"72","endLine":353,"endColumn":40},{"ruleId":"78","severity":1,"message":"79","line":360,"column":13,"nodeType":"80","endLine":396,"endColumn":4},{"ruleId":"78","severity":1,"message":"81","line":396,"column":6,"nodeType":"82","endLine":396,"endColumn":24,"suggestions":"83"},{"ruleId":"69","severity":1,"message":"84","line":399,"column":10,"nodeType":"71","messageId":"72","endLine":399,"endColumn":18},{"ruleId":"69","severity":1,"message":"85","line":401,"column":9,"nodeType":"71","messageId":"72","endLine":401,"endColumn":28},{"ruleId":"86","severity":1,"message":"87","line":38,"column":15,"nodeType":"88","endLine":38,"endColumn":49},{"ruleId":"69","severity":1,"message":"70","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":12},{"ruleId":"69","severity":1,"message":"89","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":14},{"ruleId":"69","severity":1,"message":"70","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":12},{"ruleId":"69","severity":1,"message":"90","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":16},{"ruleId":"69","severity":1,"message":"74","line":102,"column":10,"nodeType":"71","messageId":"72","endLine":102,"endColumn":17},{"ruleId":"69","severity":1,"message":"75","line":103,"column":10,"nodeType":"71","messageId":"72","endLine":103,"endColumn":23},{"ruleId":"69","severity":1,"message":"91","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"92","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"70","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":12},{"ruleId":"69","severity":1,"message":"93","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":15},{"ruleId":"69","severity":1,"message":"94","line":8,"column":10,"nodeType":"71","messageId":"72","endLine":8,"endColumn":30},{"ruleId":"69","severity":1,"message":"70","line":9,"column":8,"nodeType":"71","messageId":"72","endLine":9,"endColumn":12},{"ruleId":"69","severity":1,"message":"74","line":12,"column":10,"nodeType":"71","messageId":"72","endLine":12,"endColumn":17},{"ruleId":"69","severity":1,"message":"75","line":13,"column":10,"nodeType":"71","messageId":"72","endLine":13,"endColumn":23},{"ruleId":"69","severity":1,"message":"76","line":13,"column":25,"nodeType":"71","messageId":"72","endLine":13,"endColumn":41},{"ruleId":"78","severity":1,"message":"79","line":127,"column":13,"nodeType":"80","endLine":158,"endColumn":4},{"ruleId":"78","severity":1,"message":"95","line":158,"column":6,"nodeType":"82","endLine":158,"endColumn":24,"suggestions":"96"},"no-unused-vars","'Web3' is defined but never used.","Identifier","unusedVar","'Keanu' is defined but never used.","'factory' is assigned a value but never used.","'tokenContract' is assigned a value but never used.","'setTokenContract' is assigned a value but never used.","'withdrawUnclaimedToken' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getExtraICOdata', 'loadInitialFactory', and 'loadInitialTemplate'. Either include them or remove the dependency array.","ArrayExpression",["97"],"'imageUrl' is assigned a value but never used.","'handleImageUrlInput' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'NavBar' is defined but never used.","'template' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Table' is defined but never used.","'fetchDatabaseIcoData' is defined but never used.","React Hook useEffect has missing dependencies: 'loadInitialFactory' and 'loadInitialTemplate'. Either include them or remove the dependency array.",["98"],{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [myWeb3, accounts, loadInitialFactory, loadInitialTemplate, getExtraICOdata]",{"range":"103","text":"104"},"Update the dependencies array to be: [myWeb3, accounts, loadInitialFactory, loadInitialTemplate]",{"range":"105","text":"106"},[10186,10204],"[myWeb3, accounts, loadInitialFactory, loadInitialTemplate, getExtraICOdata]",[5088,5106],"[myWeb3, accounts, loadInitialFactory, loadInitialTemplate]"]