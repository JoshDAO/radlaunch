[{"/home/josh/Projects/LBL/ico-manager/front-end/src/index.js":"1","/home/josh/Projects/LBL/ico-manager/front-end/src/investors/icoTable.js":"2","/home/josh/Projects/LBL/ico-manager/front-end/src/Wallet_model.js":"3","/home/josh/Projects/LBL/ico-manager/front-end/src/developers/DeveloperIndex.js":"4","/home/josh/Projects/LBL/ico-manager/front-end/src/investors/individualListing.js":"5","/home/josh/Projects/LBL/ico-manager/front-end/src/investors/Index.js":"6","/home/josh/Projects/LBL/ico-manager/front-end/src/NavBar.js":"7","/home/josh/Projects/LBL/ico-manager/front-end/src/Landing.js":"8","/home/josh/Projects/LBL/ico-manager/front-end/src/utils/apiCalls.js":"9","/home/josh/Projects/LBL/ico-manager/front-end/src/App.js":"10","/home/josh/Projects/LBL/ico-manager/front-end/src/developers/IbcoSetupForm.js":"11"},{"size":215,"mtime":1610052466421,"results":"12","hashOfConfig":"13"},{"size":7685,"mtime":1611955656582,"results":"14","hashOfConfig":"13"},{"size":1324,"mtime":1612013420209,"results":"15","hashOfConfig":"13"},{"size":19443,"mtime":1612010864391,"results":"16","hashOfConfig":"13"},{"size":16784,"mtime":1612099455611,"results":"17","hashOfConfig":"13"},{"size":1655,"mtime":1612010856355,"results":"18","hashOfConfig":"13"},{"size":3152,"mtime":1612019479704,"results":"19","hashOfConfig":"13"},{"size":3254,"mtime":1611879809628,"results":"20","hashOfConfig":"13"},{"size":2687,"mtime":1611874858612,"results":"21","hashOfConfig":"13"},{"size":2790,"mtime":1611875723025,"results":"22","hashOfConfig":"13"},{"size":13966,"mtime":1612098300362,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i0cwq4",{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/josh/Projects/LBL/ico-manager/front-end/src/index.js",[],"/home/josh/Projects/LBL/ico-manager/front-end/src/investors/icoTable.js",["48","49","50","51","52","53"],"/home/josh/Projects/LBL/ico-manager/front-end/src/Wallet_model.js",[],"/home/josh/Projects/LBL/ico-manager/front-end/src/developers/DeveloperIndex.js",["54","55","56","57","58","59","60","61","62","63"],"import { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Input } from 'rimble-ui'\n\nimport map from '../artifacts/deployments/map.json'\nimport NavBar from '../NavBar'\nimport developersImage from '../assets/developersAndFounders.svg'\nimport { fetchDatabaseIcoData, updateIcoImage, updateProjectDescription } from '../utils/apiCalls'\n\nconst H2 = styled.h2`\n  font-family: 'Questrial', sans-serif;\n  font-weight: 400;\n  text-align: left;\n  font-size: 3rem;\n  display: inline-block;\n  margin: 2rem 0;\n`\n\nconst LaunchButton = styled.button`\n  font-family: 'Questrial', sans-serif;\n  font-weight: 400;\n  font-size: 1.5rem;\n  background: #ffffff;\n  border: 2px solid #4e3fce;\n  box-sizing: border-box;\n  border-radius: 2rem;\n  width: 25rem;\n  height: 4rem;\n  cursor: pointer;\n`\n\nconst HeaderDiv = styled.div`\n  border-bottom: 1px solid #4e3fce;\n  display: flex;\n  justify-content: space-between;\n  padding: 0 2%;\n`\n\nconst DeveloperIndex = ({\n  imgSource,\n  titleText,\n  myWeb3,\n  setMyWeb3,\n  accounts,\n  setAccounts,\n  chainId,\n  setChainId,\n}) => {\n  return (\n    <div>\n      <NavBar\n        imgSource={developersImage}\n        titleText={'Developers - Create and Manage your project launches'}\n        myWeb3={myWeb3}\n        setMyWeb3={setMyWeb3}\n        accounts={accounts}\n        setAccounts={setAccounts}\n        chainId={chainId}\n        setChainId={setChainId}\n      />\n      <main style={{ padding: '0 10%' }}>\n        <HeaderDiv>\n          <H2>My Launches</H2>\n          <Link\n            to={'/IbcoSetup'}\n            style={{\n              textDecoration: 'none',\n              height: '4rem',\n              marginTop: '1.5rem',\n            }}\n          >\n            <LaunchButton>Launch a New Project</LaunchButton>\n          </Link>\n        </HeaderDiv>\n        <div style={{ padding: '2rem 2% 0 2%' }}>\n          <IcoDashboard\n            myWeb3={myWeb3}\n            setMyWeb3={setMyWeb3}\n            accounts={accounts}\n            setAccounts={setAccounts}\n          />\n        </div>\n      </main>\n    </div>\n  )\n}\n\nconst DashboardContainer = styled.div`\n  display: flex;\n  width: 100%;\n`\nconst ProjectTitle = styled.h3`\n  font-family: 'Questrial', sans-serif;\n  font-size: 2.3rem;\n  font-weight 400;\n  margin-top: 0.4rem;\n  text-align: left\n`\n\nconst Column1 = styled.div`\n  width: 16%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-right: 1rem;\n`\n\nconst Column2 = styled.div`\n  width: 16%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-right: 1rem;\n  padding: 0 1rem;\n`\n\nconst Column3 = styled.div`\n  width: 30%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-right: 1rem;\n`\n\nconst Button = styled.button`\n  background: #ffffff;\n  border: 2px solid #4e3fce;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  padding: 0.7rem;\n  width: 100%;\n  font-family: 'Questrial', sans-serif;\n  font-size: 1rem;\n`\nconst Span = styled.span`\n  font-family: 'Questrial', sans-serif;\n  font-size: 0.9rem;\n  font-weight: 400;\n  margin-top: 2rem;\n  text-align: left;\n`\n\nconst ProjectImage = styled.img`\n  width: 100%;\n`\n\nconst Table = styled.table`\n  width: 100%;\n  text-align: left;\n  border-spacing: 0;\n  border-collapse: collapse;\n`\n\nconst Td = styled.td`\n  font-family: 'Questrial', sans-serif;\n  font-size: 0.9rem;\n  font-weight: 400;\n  padding: 0.3rem;\n  word-break: break-word;\n`\nconst Tr = styled.tr`\n  height: 3rem;\n  border-top: 1px solid #e6ddff;\n  &:first-of-type {\n    border: none;\n  }\n`\n\nconst TableContainer = styled.div`\n  border: 1px solid #e6ddff;\n  border-radius: 10px;\n  width: 100%;\n`\n\nconst AboutSection = styled.div`\n  margin-top: 2rem;\n  margin-bottom: 4rem;\n  border-bottom: 3px solid #4e3fce;\n  padding-bottom: 2rem;\n`\n\nconst AboutTitle = styled.h4`\n  font-family: 'Questrial', sans-serif;\n  font-size: 1.8rem;\n  font-weight 400;\n  margin: 1rem 0;\n  text-align: left\n`\n\nconst EditButton = styled.button`\n  background: #ffffff;\n  border: 2px solid #4e3fce;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-family: 'Questrial', sans-serif;\n  font-weight: 400;\n  font-size: 1rem;\n  height: 2.5rem;\n  margin: 0.7rem 0 0 2rem;\n  width: 6rem;\n`\nconst AboutText = styled.p`\n  font-family: 'Questrial', sans-serif;\n  font-weight: 400;\n  text-align: left;\n  font-size: 1.1rem;\n`\n\nconst GraphContainer = styled.div`\n  height: 20rem; //change this for graph size\n  width: 40rem;\n  margin: 2rem auto;\n  background-color: salmon;\n`\n\nconst IcoDashboard = ({ myWeb3, setMyWeb3, accounts, setAccounts }) => {\n  const [factory, setFactory] = useState()\n  const [tokenContract, setTokenContract] = useState()\n  const [launchedICOs, setLaunchedICOs] = useState([])\n\n  async function loadInitialFactory() {\n    // if (chainId <= 42){\n    //     return\n    // }\n    const dyn = await loadContract('42', 'DynPoolFactory')\n    setFactory(dyn)\n    return dyn\n  }\n\n  async function loadContract(chain, contractName) {\n    // Load a deployed contract instance into a web3 contract object\n    // const {web3} = this.state\n\n    // Get the address of the most recent deployment from the deployment map\n    let address\n    try {\n      address = map[chain][contractName][0]\n    } catch (e) {\n      console.log(`Couldn't find any deployed contract \"${contractName}\" on the chain \"${chain}\".`)\n      return undefined\n    }\n\n    // Load the artifact with the specified address\n    let contractArtifact\n    try {\n      contractArtifact = await import(`../artifacts/deployments/${chain}/${address}.json`)\n    } catch (e) {\n      console.log(\n        `Failed to load contract artifact \"../artifacts/deployments/${chain}/${address}.json\"`,\n      )\n      return undefined\n    }\n    console.log(contractArtifact)\n\n    return new myWeb3.eth.Contract(contractArtifact.abi, address)\n  }\n\n  async function events(factory) {\n    return await factory.getPastEvents('IBCODeployed', { fromBlock: 1 }).then((response) => {\n      return response\n    })\n  }\n\n  async function loadInitialTemplate(addr, contract) {\n    // if (chainId <= 42){\n    //     return\n    // }\n\n    const token = await loadTemplate('42', contract, addr)\n    return token\n  }\n\n  async function loadTemplate(chain, contractName, addr) {\n    // Load a deployed contract instance into a web3 contract object\n    // const {web3} = this.state\n\n    // Get the address of the most recent deployment from the deployment map\n    let address\n    try {\n      address = map[chain][contractName][0]\n    } catch (e) {\n      console.log(`Couldn't find any deployed contract \"${contractName}\" on the chain \"${chain}\".`)\n      return undefined\n    }\n\n    // Load the artifact with the specified address\n    let contractArtifact\n    try {\n      contractArtifact = await import(`../artifacts/deployments/${chain}/${address}.json`)\n    } catch (e) {\n      console.log(\n        `Failed to load contract artifact \"../artifacts/deployments/${chain}/${address}.json\"`,\n      )\n      return undefined\n    }\n    console.log(contractArtifact)\n\n    return new myWeb3.eth.Contract(contractArtifact.abi, addr)\n  }\n\n  async function getExtraICOdata(template) {\n    const numberOfProviders = await template.methods\n      .numberOfProviders()\n      .call()\n      .then((result) => result)\n    const amountRaised = await template.methods\n      .totalProvided()\n      .call()\n      .then((result) => result)\n    const yourContribution = await template.methods\n      .provided(accounts[0])\n      .call()\n      .then((result) => result)\n\n    return {\n      numberOfProviders,\n      amountRaised,\n      yourContribution,\n    }\n  }\n\n  async function getExtraTokendata(template) {\n    const name = await template.methods\n      .name()\n      .call()\n      .then((result) => result)\n    const symbol = await template.methods\n      .symbol()\n      .call()\n      .then((result) => result)\n    const totalSupply = await template.methods\n      .totalSupply()\n      .call()\n      .then((result) => result)\n\n    return {\n      name,\n      symbol,\n      totalSupply,\n    }\n  }\n\n  async function withdrawToken(template) {\n    await template.methods\n      .withdrawToken()\n      .send({ from: accounts[0] })\n      .on('receipt', async () => {})\n  }\n\n  async function withdrawProvidedETH(template) {\n    await template.methods\n      .withdrawProvidedETH()\n      .send({ from: accounts[0] })\n      .on('receipt', async () => {})\n  }\n  async function withdrawUnclaimedToken(template) {\n    await template.methods\n      .withdrawUnclaimedToken()\n      .send({ from: accounts[0] })\n      .on('receipt', async () => {})\n  }\n\n  useEffect(async () => {\n    if (myWeb3 === undefined || accounts === undefined) {\n      return\n    } else {\n      const factory = await loadInitialFactory()\n      const eventsArray = await events(factory)\n      const databaseData = await fetchDatabaseIcoData(accounts[0])\n      console.log('database Data:  ', databaseData)\n      eventsArray\n        .filter((event) => event['returnValues']['0'] === accounts[0])\n        .forEach(async (event) => {\n          const dbData = databaseData.data.filter(\n            (ico) => ico.contractAddress === event.returnValues['1'],\n          )\n          console.log('dbdata:  ', dbData)\n          const tokenContract = await loadInitialTemplate(event.returnValues['2'], 'ERCToken')\n          const ICOContract = await loadInitialTemplate(event.returnValues['1'], 'IBCOTemplate')\n          const extraIcoData = await getExtraICOdata(ICOContract)\n          const extraTokenData = await getExtraTokendata(tokenContract)\n          const projectData = [\n            {\n              ...extraIcoData,\n              ...extraTokenData,\n              contractAddress: event.returnValues['1'],\n              startDate: event.returnValues.startDate * 1000,\n              endDate: event.returnValues.endDate * 1000,\n              tokenSupply: event.returnValues.tokenSupply,\n              minimumRaiseAmount: event.returnValues.minimalProvide,\n              tokenAddress: event.returnValues['2'],\n              imageUrl: dbData[0].imageUrl || null,\n              projectDescription: dbData[0].projectDescription,\n              etherscanLink: 'https://kovan.etherscan.io/address/' + event.returnValues['1'],\n            },\n          ]\n          console.log(projectData)\n          setLaunchedICOs((launchedICOs) => launchedICOs.concat(projectData))\n        })\n    }\n  }, [myWeb3, accounts])\n\n  // ---------- form handling -------------\n  const [imageUrl, setImageUrl] = useState('')\n\n  const handleImageUrlInput = (e) => {\n    setImageUrl(e.target.value)\n    validateInput(e)\n  }\n  const validateInput = (e) => {\n    e.target.parentNode.classList.add('was-validated')\n  }\n\n  return (\n    <>\n      {launchedICOs.length ? (\n        launchedICOs.map((ico) => (\n          <>\n            <DashboardContainer>\n              <Column1>\n                <ProjectTitle>{ico.name}</ProjectTitle>\n                <ImageContainer\n                  imageUrl={ico.imageUrl}\n                  accounts={accounts[0]}\n                  tokenAddress={ico.tokenAddress}\n                />\n              </Column1>\n              <Column2>\n                <Button>\n                  <a\n                    href={ico.etherscanLink}\n                    style={{ textDecoration: 'none', color: 'black' }}\n                    target='_blank'\n                  >\n                    View on Etherscan\n                  </a>\n                </Button>\n                <Span>Verified status: Verified</Span>\n                <Span>Access: Public</Span>\n                <Button\n                  style={{ marginTop: '2rem' }}\n                  disabled={Date.now() < ico.endDate}\n                  onClick={async () => {\n                    const ICOContract = await loadInitialTemplate(\n                      ico.contractAddress,\n                      'IBCOTemplate',\n                    )\n                    parseInt(ico.amountRaised) < parseInt(ico.minimumRaiseAmount)\n                      ? withdrawToken(ICOContract)\n                      : withdrawProvidedETH(ICOContract)\n                  }}\n                >\n                  {parseInt(ico.amountRaised) < parseInt(ico.minimumRaiseAmount)\n                    ? 'Withdraw Tokens'\n                    : 'Withdraw ETH'}\n                </Button>\n                <Span>Please note: Withdrawals can only be made once the ICO has ended.</Span>\n              </Column2>\n              <Column3>\n                <TableContainer>\n                  <Table>\n                    <Tr>\n                      <Td>\n                        Contract address: <br /> <b>{ico.contractAddress}</b>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        Start/end date:\n                        <br />{' '}\n                        <b>\n                          {new Date(ico.startDate).toString().substr(4, 20)} to{' '}\n                          {new Date(ico.endDate).toString().substr(4, 24)}\n                        </b>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        Tokens for sale: <b>{(ico.tokenSupply / 1e18).toFixed()}</b>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        Amount raised: <b>{ico.amountRaised / 1e18}</b>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        Number of investors: <b>{ico.numberOfProviders}</b>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        Minimum raise amount: <b>{ico.minimumRaiseAmount / 1e18}</b>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        Your contribution: <b>{ico.yourContribution / 1e18}</b>\n                      </Td>\n                    </Tr>\n                  </Table>\n                </TableContainer>\n              </Column3>\n              <Column3>\n                <TableContainer>\n                  <Table>\n                    <Tr>\n                      <Td>\n                        Token address:\n                        <br />\n                        <b>{ico.tokenAddress}</b>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        Token name: <b>{ico.name}</b>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        Token Symbol: <b>{ico.symbol}</b>\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>\n                        Total token supply: <b>{ico.totalSupply / 1e18}</b>\n                      </Td>\n                    </Tr>\n                    <Tr style={{ height: '9rem' }}>\n                      <Td>\n                        Launch type: Dynamic swap pool\n                        <br />\n                        <br />\n                        In this type of launch if the amount raised is above the minimum raise\n                        amount. You will be allocated a percentage of the tokens for sale equivalent\n                        to your percentage contribution of the Amount raised. If the minimum raise\n                        amount is not reached you can reclaim your ETH.{' '}\n                      </Td>\n                    </Tr>\n                  </Table>\n                </TableContainer>\n              </Column3>\n            </DashboardContainer>\n            {/*<GraphContainer></GraphContainer>*/}\n            <AboutSection>\n              <AboutArea\n                projectDescription={ico.projectDescription}\n                tokenAddress={ico.tokenAddress}\n                accounts={accounts[0]}\n              />\n            </AboutSection>\n          </>\n        ))\n      ) : (\n        <div\n          style={{\n            fontSize: '4rem',\n            fontFamily: \"'Questrial', sans-serif\",\n            fontWeight: 400,\n            paddingTop: '3rem',\n          }}\n        >\n          {accounts ? 'You have no ICOs launched' : 'Connect ur wallet m8'}\n        </div>\n      )}\n    </>\n  )\n}\n\nconst ImageContainer = ({ imageUrl, accounts, tokenAddress }) => {\n  const [imgUrl, setImgUrl] = useState(imageUrl)\n  const [inputBox, setInputBox] = useState('')\n  const handleImageUrlInput = (e) => {\n    setInputBox(e.target.value)\n    validateInput(e)\n  }\n  const validateInput = (e) => {\n    e.target.parentNode.classList.add('was-validated')\n  }\n\n  return (\n    <>\n      {imgUrl ? (\n        <ProjectImage src={imgUrl} />\n      ) : (\n        <form\n          style={{ border: '2px solid #e6ddff', padding: '1rem' }}\n          onSubmit={async (event) => {\n            event.preventDefault()\n            const result = await updateIcoImage(accounts, tokenAddress, inputBox)\n            setImgUrl(result.listing.imageUrl)\n          }}\n        >\n          <label\n            for='address-input'\n            style={{\n              marginBottom: '0.8rem',\n              fontFamily: \"'Questrial', sans-serif\",\n              fontWeight: 400,\n              fontSize: '1rem',\n            }}\n          >\n            Enter hosted image url:\n          </label>\n          <Input\n            id='image-url'\n            type='text'\n            required={true}\n            onChange={handleImageUrlInput}\n            value={inputBox}\n            style={{\n              width: '100%',\n              marginTop: '0.5rem',\n              marginBottom: '1rem',\n              height: '2rem',\n            }}\n          ></Input>\n          <Button type='submit'>Upload your logo</Button>\n        </form>\n      )}\n    </>\n  )\n}\n\nconst AboutArea = ({ projectDescription, accounts, tokenAddress }) => {\n  const [projDescription, setProjDescription] = useState(projectDescription)\n  const [inputBox, setInputBox] = useState(projectDescription)\n  const [editOpen, setEditOpen] = useState(false)\n\n  const handleProjectDescriptionInput = (e) => {\n    setInputBox(e.target.value)\n    validateInput(e)\n  }\n  const validateInput = (e) => {\n    e.target.parentNode.classList.add('was-validated')\n  }\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <AboutTitle>About the Project:</AboutTitle>\n        <EditButton\n          onClick={async () => {\n            if (editOpen) {\n              console.log('sent  ', accounts, tokenAddress, inputBox)\n              const result = await updateProjectDescription(accounts, tokenAddress, inputBox)\n              console.log('result:   ', result)\n              setProjDescription(result.listing.projectDescription)\n            }\n            setEditOpen(!editOpen)\n          }}\n        >\n          {editOpen ? 'Submit' : 'Edit'}\n        </EditButton>\n      </div>\n      {editOpen ? (\n        <form>\n          <Input\n            id='image-url'\n            type='text'\n            required={true}\n            onChange={handleProjectDescriptionInput}\n            value={inputBox}\n            style={{\n              width: '100%',\n              marginTop: '0.5rem',\n              marginBottom: '1rem',\n              height: '2rem',\n            }}\n          ></Input>\n        </form>\n      ) : (\n        <AboutText>{projDescription}</AboutText>\n      )}\n    </>\n  )\n}\nexport default DeveloperIndex\n","/home/josh/Projects/LBL/ico-manager/front-end/src/investors/individualListing.js",["64","65","66","67","68"],"/home/josh/Projects/LBL/ico-manager/front-end/src/investors/Index.js",["69","70","71"],"import React, { useState, useEffect } from 'react'\nimport NavBar from '../NavBar'\nimport investorsImage from '../assets/investorsImage.svg'\nimport IcoTable from './icoTable'\nimport Web3 from 'web3'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nconst HeaderDiv = styled.div`\n  border-bottom: 1px solid #4e3fce;\n  display: center;\n  justify-content: space-between;\n  padding: 0 2%;\n`\n\nconst H2 = styled.h2`\n  font-family: 'Questrial', sans-serif;\n  font-weight: 400;\n  text-align: left;\n  font-size: 2rem;\n  display: inline-block;\n  margin: 1rem 0;\n`\nconst InvestorIndex = ({\n  myWeb3,\n  setMyWeb3,\n  accounts,\n  setAccounts,\n  chainId,\n  setChainId,\n  launchedICOs,\n  setLaunchedICOs,\n}) => {\n  useEffect(() => {\n    console.log('ICOs    ', launchedICOs)\n  })\n  return (\n    <>\n      <NavBar\n        imgSource={investorsImage}\n        titleText={'Investors - Participate in project launches'}\n        myWeb3={myWeb3}\n        setMyWeb3={setMyWeb3}\n        accounts={accounts}\n        setAccounts={setAccounts}\n        chainId={chainId}\n        setChainId={setChainId}\n      />\n      <HeaderDiv>\n        <H2>All Launches</H2>\n      </HeaderDiv>\n      {myWeb3 ? (\n        <IcoTable\n          myWeb3={myWeb3}\n          setMyWeb3={setMyWeb3}\n          accounts={accounts}\n          setAccounts={setAccounts}\n        />\n      ) : (\n        <div\n          style={{\n            fontSize: '4rem',\n            fontFamily: \"'Questrial', sans-serif\",\n            fontWeight: 400,\n            paddingTop: '3rem',\n          }}\n        >\n          Connect ur wallet m8\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default InvestorIndex\n","/home/josh/Projects/LBL/ico-manager/front-end/src/NavBar.js",["72","73","74","75","76","77","78","79","80","81","82","83","84","85"],"/home/josh/Projects/LBL/ico-manager/front-end/src/Landing.js",["86","87"],"/home/josh/Projects/LBL/ico-manager/front-end/src/utils/apiCalls.js",[],"/home/josh/Projects/LBL/ico-manager/front-end/src/App.js",["88","89"],"/home/josh/Projects/LBL/ico-manager/front-end/src/developers/IbcoSetupForm.js",["90","91","92","93"],{"ruleId":"94","severity":1,"message":"95","line":46,"column":10,"nodeType":"96","messageId":"97","endLine":46,"endColumn":17},{"ruleId":"94","severity":1,"message":"98","line":47,"column":10,"nodeType":"96","messageId":"97","endLine":47,"endColumn":23},{"ruleId":"94","severity":1,"message":"99","line":47,"column":25,"nodeType":"96","messageId":"97","endLine":47,"endColumn":41},{"ruleId":"100","severity":1,"message":"101","line":161,"column":13,"nodeType":"102","endLine":193,"endColumn":4},{"ruleId":"94","severity":1,"message":"103","line":167,"column":13,"nodeType":"96","messageId":"97","endLine":167,"endColumn":25},{"ruleId":"100","severity":1,"message":"104","line":193,"column":6,"nodeType":"105","endLine":193,"endColumn":24,"suggestions":"106"},{"ruleId":"94","severity":1,"message":"107","line":210,"column":7,"nodeType":"96","messageId":"97","endLine":210,"endColumn":21},{"ruleId":"94","severity":1,"message":"95","line":218,"column":10,"nodeType":"96","messageId":"97","endLine":218,"endColumn":17},{"ruleId":"94","severity":1,"message":"98","line":219,"column":10,"nodeType":"96","messageId":"97","endLine":219,"endColumn":23},{"ruleId":"94","severity":1,"message":"99","line":219,"column":25,"nodeType":"96","messageId":"97","endLine":219,"endColumn":41},{"ruleId":"94","severity":1,"message":"108","line":357,"column":18,"nodeType":"96","messageId":"97","endLine":357,"endColumn":40},{"ruleId":"100","severity":1,"message":"101","line":364,"column":13,"nodeType":"102","endLine":402,"endColumn":4},{"ruleId":"100","severity":1,"message":"109","line":402,"column":6,"nodeType":"105","endLine":402,"endColumn":24,"suggestions":"110"},{"ruleId":"94","severity":1,"message":"111","line":405,"column":10,"nodeType":"96","messageId":"97","endLine":405,"endColumn":18},{"ruleId":"94","severity":1,"message":"112","line":407,"column":9,"nodeType":"96","messageId":"97","endLine":407,"endColumn":28},{"ruleId":"113","severity":1,"message":"114","line":434,"column":21,"nodeType":"115","endLine":434,"endColumn":36},{"ruleId":"94","severity":1,"message":"116","line":112,"column":7,"nodeType":"96","messageId":"97","endLine":112,"endColumn":17},{"ruleId":"94","severity":1,"message":"107","line":131,"column":7,"nodeType":"96","messageId":"97","endLine":131,"endColumn":21},{"ruleId":"100","severity":1,"message":"117","line":309,"column":6,"nodeType":"105","endLine":309,"endColumn":24,"suggestions":"118"},{"ruleId":"113","severity":1,"message":"114","line":364,"column":19,"nodeType":"115","endLine":364,"endColumn":34},{"ruleId":"94","severity":1,"message":"119","line":524,"column":17,"nodeType":"96","messageId":"97","endLine":524,"endColumn":23},{"ruleId":"94","severity":1,"message":"120","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"121","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":12},{"ruleId":"94","severity":1,"message":"122","line":7,"column":10,"nodeType":"96","messageId":"97","endLine":7,"endColumn":14},{"ruleId":"94","severity":1,"message":"123","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"124","line":6,"column":8,"nodeType":"96","messageId":"97","endLine":6,"endColumn":14},{"ruleId":"94","severity":1,"message":"121","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":12},{"ruleId":"94","severity":1,"message":"125","line":8,"column":10,"nodeType":"96","messageId":"97","endLine":8,"endColumn":19},{"ruleId":"94","severity":1,"message":"126","line":9,"column":10,"nodeType":"96","messageId":"97","endLine":9,"endColumn":24},{"ruleId":"94","severity":1,"message":"127","line":11,"column":8,"nodeType":"96","messageId":"97","endLine":11,"endColumn":11},{"ruleId":"94","severity":1,"message":"128","line":12,"column":8,"nodeType":"96","messageId":"97","endLine":12,"endColumn":16},{"ruleId":"94","severity":1,"message":"129","line":14,"column":7,"nodeType":"96","messageId":"97","endLine":14,"endColumn":10},{"ruleId":"94","severity":1,"message":"130","line":75,"column":10,"nodeType":"96","messageId":"97","endLine":75,"endColumn":18},{"ruleId":"94","severity":1,"message":"131","line":75,"column":20,"nodeType":"96","messageId":"97","endLine":75,"endColumn":31},{"ruleId":"94","severity":1,"message":"132","line":76,"column":10,"nodeType":"96","messageId":"97","endLine":76,"endColumn":18},{"ruleId":"94","severity":1,"message":"133","line":76,"column":20,"nodeType":"96","messageId":"97","endLine":76,"endColumn":31},{"ruleId":"134","severity":1,"message":"135","line":98,"column":7,"nodeType":"136","endLine":98,"endColumn":101},{"ruleId":"134","severity":1,"message":"135","line":100,"column":9,"nodeType":"136","endLine":100,"endColumn":54},{"ruleId":"94","severity":1,"message":"123","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"137","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":22},{"ruleId":"94","severity":1,"message":"121","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":12},{"ruleId":"94","severity":1,"message":"138","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":14},{"ruleId":"94","severity":1,"message":"121","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":12},{"ruleId":"94","severity":1,"message":"128","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":102,"column":10,"nodeType":"96","messageId":"97","endLine":102,"endColumn":17},{"ruleId":"94","severity":1,"message":"98","line":103,"column":10,"nodeType":"96","messageId":"97","endLine":103,"endColumn":23},"no-unused-vars","'factory' is assigned a value but never used.","Identifier","unusedVar","'tokenContract' is assigned a value but never used.","'setTokenContract' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'databaseData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadInitialFactory' and 'loadInitialTemplate'. Either include them or remove the dependency array.","ArrayExpression",["139"],"'GraphContainer' is assigned a value but never used.","'withdrawUnclaimedToken' is defined but never used.","React Hook useEffect has missing dependencies: 'getExtraICOdata', 'loadInitialFactory', and 'loadInitialTemplate'. Either include them or remove the dependency array.",["140"],"'imageUrl' is assigned a value but never used.","'handleImageUrlInput' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'EditButton' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ICOs', 'address', 'getExtraICOdata', 'loadInitialFactory', and 'loadInitialTemplate'. Either include them or remove the dependency array.",["141"],"'result' is assigned a value but never used.","'useState' is defined but never used.","'Web3' is defined but never used.","'Link' is defined but never used.","'Component' is defined but never used.","'Portis' is defined but never used.","'useEffect' is defined but never used.","'MetaMaskButton' is defined but never used.","'map' is defined but never used.","'template' is defined but never used.","'Nav' is assigned a value but never used.","'dynInput' is assigned a value but never used.","'setDynInput' is assigned a value but never used.","'template' is assigned a value but never used.","'setTemplate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DeveloperIndex' is defined but never used.","'NavBar' is defined but never used.",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [myWeb3, accounts, loadInitialFactory, loadInitialTemplate]",{"range":"148","text":"149"},"Update the dependencies array to be: [myWeb3, accounts, loadInitialFactory, loadInitialTemplate, getExtraICOdata]",{"range":"150","text":"151"},"Update the dependencies array to be: [myWeb3, accounts, ICOs, loadInitialFactory, address, loadInitialTemplate, getExtraICOdata]",{"range":"152","text":"153"},[5809,5827],"[myWeb3, accounts, loadInitialFactory, loadInitialTemplate]",[10427,10445],"[myWeb3, accounts, loadInitialFactory, loadInitialTemplate, getExtraICOdata]",[8351,8369],"[myWeb3, accounts, ICOs, loadInitialFactory, address, loadInitialTemplate, getExtraICOdata]"]